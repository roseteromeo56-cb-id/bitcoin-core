(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[4064],{20640:function(e,E,t){"use strict";var s=t(11742),r={"text/plain":"Text","text/html":"Url",default:"Text"};e.exports=function(e,E){var t,T,n,R,o,i,A,a,S=!1;E||(E={}),n=E.debug||!1;try{if(o=s(),i=document.createRange(),A=document.getSelection(),(a=document.createElement("span")).textContent=e,a.ariaHidden="true",a.style.all="unset",a.style.position="fixed",a.style.top=0,a.style.clip="rect(0, 0, 0, 0)",a.style.whiteSpace="pre",a.style.webkitUserSelect="text",a.style.MozUserSelect="text",a.style.msUserSelect="text",a.style.userSelect="text",a.addEventListener("copy",function(t){if(t.stopPropagation(),E.format){if(t.preventDefault(),void 0===t.clipboardData){n&&console.warn("unable to use e.clipboardData"),n&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var s=r[E.format]||r.default;window.clipboardData.setData(s,e)}else t.clipboardData.clearData(),t.clipboardData.setData(E.format,e)}E.onCopy&&(t.preventDefault(),E.onCopy(t.clipboardData))}),document.body.appendChild(a),i.selectNodeContents(a),A.addRange(i),!document.execCommand("copy"))throw Error("copy command was unsuccessful");S=!0}catch(s){n&&console.error("unable to copy using execCommand: ",s),n&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(E.format||"text",e),E.onCopy&&E.onCopy(window.clipboardData),S=!0}catch(s){n&&console.error("unable to copy using clipboardData: ",s),n&&console.error("falling back to prompt"),t="message"in E?E.message:"Copy to clipboard: #{key}, Enter",T=(/mac os x/i.test(navigator.userAgent)?"⌘":"Ctrl")+"+C",R=t.replace(/#{\s*key\s*}/g,T),window.prompt(R,e)}}finally{A&&("function"==typeof A.removeRange?A.removeRange(i):A.removeAllRanges()),a&&document.body.removeChild(a),o()}return S}},62663:function(e){e.exports=function(e,E,t,s){var r=-1,T=null==e?0:e.length;for(s&&T&&(t=e[++r]);++r<T;)t=E(t,e[r],r,e);return t}},49029:function(e){var E=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g;e.exports=function(e){return e.match(E)||[]}},18674:function(e){e.exports=function(e){return function(E){return null==e?void 0:e[E]}}},35393:function(e,E,t){var s=t(62663),r=t(53816),T=t(58748),n=RegExp("['’]","g");e.exports=function(e){return function(E){return s(T(r(E).replace(n,"")),e,"")}}},69389:function(e,E,t){var s=t(18674)({À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"});e.exports=s},93157:function(e){var E=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;e.exports=function(e){return E.test(e)}},2757:function(e){var E="\ud800-\udfff",t="\\u2700-\\u27bf",s="a-z\\xdf-\\xf6\\xf8-\\xff",r="A-Z\\xc0-\\xd6\\xd8-\\xde",T="\\xac\\xb1\\xd7\\xf7\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf\\u2000-\\u206f \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",n="['’]",R="["+T+"]",o="["+s+"]",i="[^"+E+T+"\\d+"+t+s+r+"]",A="(?:\ud83c[\udde6-\uddff]){2}",a="[\ud800-\udbff][\udc00-\udfff]",S="["+r+"]",N="(?:"+o+"|"+i+")",I="(?:"+n+"(?:d|ll|m|re|s|t|ve))?",_="(?:"+n+"(?:D|LL|M|RE|S|T|VE))?",O="(?:[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]|\ud83c[\udffb-\udfff])?",l="[\\ufe0e\\ufe0f]?",L="(?:\\u200d(?:"+["[^"+E+"]",A,a].join("|")+")"+l+O+")*",C="(?:"+["["+t+"]",A,a].join("|")+")"+(l+O+L),c=RegExp([S+"?"+o+"+"+I+"(?="+[R,S,"$"].join("|")+")","(?:"+S+"|"+i+")+"+_+"(?="+[R,S+N,"$"].join("|")+")",S+"?"+N+"+"+I,S+"+"+_,"\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])","\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])","\\d+",C].join("|"),"g");e.exports=function(e){return e.match(c)||[]}},50361:function(e,E,t){var s=t(85990);e.exports=function(e){return s(e,5)}},53816:function(e,E,t){var s=t(69389),r=t(79833),T=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,n=RegExp("[\\u0300-\\u036f\\ufe20-\\ufe2f\\u20d0-\\u20ff]","g");e.exports=function(e){return(e=r(e))&&e.replace(T,s).replace(n,"")}},11865:function(e,E,t){var s=t(35393)(function(e,E,t){return e+(t?"_":"")+E.toLowerCase()});e.exports=s},58748:function(e,E,t){var s=t(49029),r=t(93157),T=t(79833),n=t(2757);e.exports=function(e,E,t){return(e=T(e),void 0===(E=t?void 0:E))?r(e)?n(e):s(e):e.match(E)||[]}},69654:function(e){var E;E=function(){function e(E,t,s){return this.id=++e.highestId,this.name=E,this.symbols=t,this.postprocess=s,this}function E(e,E,t,s){this.rule=e,this.dot=E,this.reference=t,this.data=[],this.wantedBy=s,this.isComplete=this.dot===e.symbols.length}function t(e,E){this.grammar=e,this.index=E,this.states=[],this.wants={},this.scannable=[],this.completed={}}function s(e,E){this.rules=e,this.start=E||this.rules[0].name;var t=this.byName={};this.rules.forEach(function(e){t.hasOwnProperty(e.name)||(t[e.name]=[]),t[e.name].push(e)})}function r(){this.reset("")}function T(e,E,T){if(e instanceof s)var n=e,T=E;else var n=s.fromCompiled(e,E);for(var R in this.grammar=n,this.options={keepHistory:!1,lexer:n.lexer||new r},T||{})this.options[R]=T[R];this.lexer=this.options.lexer,this.lexerState=void 0;var o=new t(n,0);this.table=[o],o.wants[n.start]=[],o.predict(n.start),o.process(),this.current=0}function n(e){var E=typeof e;if("string"===E)return e;if("object"===E){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return e.toString();if(e.type)return"%"+e.type;if(e.test)return"<"+String(e.test)+">";else throw Error("Unknown symbol type: "+e)}}return e.highestId=0,e.prototype.toString=function(e){var E=void 0===e?this.symbols.map(n).join(" "):this.symbols.slice(0,e).map(n).join(" ")+" ● "+this.symbols.slice(e).map(n).join(" ");return this.name+" → "+E},E.prototype.toString=function(){return"{"+this.rule.toString(this.dot)+"}, from: "+(this.reference||0)},E.prototype.nextState=function(e){var t=new E(this.rule,this.dot+1,this.reference,this.wantedBy);return t.left=this,t.right=e,t.isComplete&&(t.data=t.build(),t.right=void 0),t},E.prototype.build=function(){var e=[],E=this;do e.push(E.right.data),E=E.left;while(E.left);return e.reverse(),e},E.prototype.finish=function(){this.rule.postprocess&&(this.data=this.rule.postprocess(this.data,this.reference,T.fail))},t.prototype.process=function(e){for(var E=this.states,t=this.wants,s=this.completed,r=0;r<E.length;r++){var n=E[r];if(n.isComplete){if(n.finish(),n.data!==T.fail){for(var R=n.wantedBy,o=R.length;o--;){var i=R[o];this.complete(i,n)}if(n.reference===this.index){var A=n.rule.name;(this.completed[A]=this.completed[A]||[]).push(n)}}}else{var A=n.rule.symbols[n.dot];if("string"!=typeof A){this.scannable.push(n);continue}if(t[A]){if(t[A].push(n),s.hasOwnProperty(A))for(var a=s[A],o=0;o<a.length;o++){var S=a[o];this.complete(n,S)}}else t[A]=[n],this.predict(A)}}},t.prototype.predict=function(e){for(var t=this.grammar.byName[e]||[],s=0;s<t.length;s++){var r=t[s],T=this.wants[e],n=new E(r,0,this.index,T);this.states.push(n)}},t.prototype.complete=function(e,E){var t=e.nextState(E);this.states.push(t)},s.fromCompiled=function(E,t){var r=E.Lexer;E.ParserStart&&(t=E.ParserStart,E=E.ParserRules);var E=E.map(function(E){return new e(E.name,E.symbols,E.postprocess)}),T=new s(E,t);return T.lexer=r,T},r.prototype.reset=function(e,E){this.buffer=e,this.index=0,this.line=E?E.line:1,this.lastLineBreak=E?-E.col:0},r.prototype.next=function(){if(this.index<this.buffer.length){var e=this.buffer[this.index++];return"\n"===e&&(this.line+=1,this.lastLineBreak=this.index),{value:e}}},r.prototype.save=function(){return{line:this.line,col:this.index-this.lastLineBreak}},r.prototype.formatError=function(e,E){var t=this.buffer;if("string"!=typeof t)return E+" at index "+(this.index-1);var s=t.split("\n").slice(Math.max(0,this.line-5),this.line),r=t.indexOf("\n",this.index);-1===r&&(r=t.length);var T=this.index-this.lastLineBreak,n=String(this.line).length;return E+(" at line "+this.line+" col "+T+":\n\n"+s.map(function(e,E){return R(this.line-s.length+E+1,n)+" "+e},this).join("\n")+"\n"+R("",n+T))+"^\n";function R(e,E){var t=String(e);return Array(E-t.length+1).join(" ")+t}},T.fail={},T.prototype.feed=function(e){var E,s=this.lexer;for(s.reset(e,this.lexerState);;){try{if(!(E=s.next()))break}catch(e){var T=new t(this.grammar,this.current+1);this.table.push(T);var n=Error(this.reportLexerError(e));throw n.offset=this.current,n.token=e.token,n}var R=this.table[this.current];this.options.keepHistory||delete this.table[this.current-1];var o=this.current+1,T=new t(this.grammar,o);this.table.push(T);for(var i=void 0!==E.text?E.text:E.value,A=s.constructor===r?E.value:E,a=R.scannable,S=a.length;S--;){var N=a[S],I=N.rule.symbols[N.dot];if(I.test?I.test(A):I.type?I.type===E.type:I.literal===i){var _=N.nextState({data:A,token:E,isToken:!0,reference:o-1});T.states.push(_)}}if(T.process(),0===T.states.length){var n=Error(this.reportError(E));throw n.offset=this.current,n.token=E,n}this.options.keepHistory&&(R.lexerState=s.save()),this.current++}return R&&(this.lexerState=s.save()),this.results=this.finish(),this},T.prototype.reportLexerError=function(e){var E,t,s=e.token;return s?(E="input "+JSON.stringify(s.text[0])+" (lexer error)",t=this.lexer.formatError(s,"Syntax error")):(E="input (lexer error)",t=e.message),this.reportErrorCommon(t,E)},T.prototype.reportError=function(e){var E=(e.type?e.type+" token: ":"")+JSON.stringify(void 0!==e.value?e.value:e),t=this.lexer.formatError(e,"Syntax error");return this.reportErrorCommon(t,E)},T.prototype.reportErrorCommon=function(e,E){var t=[];t.push(e);var s=this.table.length-2,r=this.table[s],T=r.states.filter(function(e){var E=e.rule.symbols[e.dot];return E&&"string"!=typeof E});return 0===T.length?(t.push("Unexpected "+E+". I did not expect any more input. Here is the state of my parse table:\n"),this.displayStateStack(r.states,t)):(t.push("Unexpected "+E+". Instead, I was expecting to see one of the following:\n"),T.map(function(e){return this.buildFirstStateStack(e,[])||[e]},this).forEach(function(e){var E=e[0],s=E.rule.symbols[E.dot],r=this.getSymbolDisplay(s);t.push("A "+r+" based on:"),this.displayStateStack(e,t)},this)),t.push(""),t.join("\n")},T.prototype.displayStateStack=function(e,E){for(var t,s=0,r=0;r<e.length;r++){var T=e[r],n=T.rule.toString(T.dot);n===t?s++:(s>0&&E.push("    ^ "+s+" more lines identical to this"),s=0,E.push("    "+n)),t=n}},T.prototype.getSymbolDisplay=function(e){return function(e){var E=typeof e;if("string"===E)return e;if("object"===E){if(e.literal)return JSON.stringify(e.literal);if(e instanceof RegExp)return"character matching "+e;if(e.type)return e.type+" token";if(e.test)return"token matching "+String(e.test);else throw Error("Unknown symbol type: "+e)}}(e)},T.prototype.buildFirstStateStack=function(e,E){if(-1!==E.indexOf(e))return null;if(0===e.wantedBy.length)return[e];var t=e.wantedBy[0],s=[e].concat(E),r=this.buildFirstStateStack(t,s);return null===r?null:[e].concat(r)},T.prototype.save=function(){var e=this.table[this.current];return e.lexerState=this.lexerState,e},T.prototype.restore=function(e){var E=e.index;this.current=E,this.table[E]=e,this.table.splice(E+1),this.lexerState=e.lexerState,this.results=this.finish()},T.prototype.rewind=function(e){if(!this.options.keepHistory)throw Error("set option `keepHistory` to enable rewinding");this.restore(this.table[e])},T.prototype.finish=function(){var e=[],E=this.grammar.start;return this.table[this.table.length-1].states.forEach(function(t){t.rule.name===E&&t.dot===t.rule.symbols.length&&0===t.reference&&t.data!==T.fail&&e.push(t)}),e.map(function(e){return e.data})},{Parser:T,Grammar:s,Rule:e}},e.exports?e.exports=E():this.nearley=E()},33473:function(e,E,t){"use strict";var s=t(67294),r=t(19818),T=t(77258),n=new Map;n.set("bold",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"128",cy:"128",r:"44",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("path",{d:"M183.7,65.1q3.8,3.5,7.2,7.2l27.3,3.9a103.2,103.2,0,0,1,10.2,24.6l-16.6,22.1s.3,6.8,0,10.2l16.6,22.1a102.2,102.2,0,0,1-10.2,24.6l-27.3,3.9s-4.7,4.9-7.2,7.2l-3.9,27.3a103.2,103.2,0,0,1-24.6,10.2l-22.1-16.6a57.9,57.9,0,0,1-10.2,0l-22.1,16.6a102.2,102.2,0,0,1-24.6-10.2l-3.9-27.3q-3.7-3.5-7.2-7.2l-27.3-3.9a103.2,103.2,0,0,1-10.2-24.6l16.6-22.1s-.2-6.8,0-10.2L27.6,100.8A102.2,102.2,0,0,1,37.8,76.2l27.3-3.9q3.5-3.7,7.2-7.2l3.9-27.3a103.2,103.2,0,0,1,24.6-10.2l22.1,16.6a57.9,57.9,0,0,1,10.2,0l22.1-16.6a102.2,102.2,0,0,1,24.6,10.2Z",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}))}),n.set("duotone",function(e){return s.createElement(s.Fragment,null,s.createElement("path",{d:"M211.8,133.1c.3-3.4,0-10.2,0-10.2l16.6-22.1a103.2,103.2,0,0,0-10.2-24.6l-27.3-3.9q-3.5-3.7-7.2-7.2l-3.9-27.3a102.2,102.2,0,0,0-24.6-10.2L133.1,44.2a57.9,57.9,0,0,0-10.2,0L100.8,27.6A103.2,103.2,0,0,0,76.2,37.8L72.3,65.1q-3.7,3.5-7.2,7.2L37.8,76.2a102.2,102.2,0,0,0-10.2,24.6l16.6,22.1c-.2,3.4,0,10.2,0,10.2L27.6,155.2a103.2,103.2,0,0,0,10.2,24.6l27.3,3.9q3.5,3.8,7.2,7.2l3.9,27.3a102.2,102.2,0,0,0,24.6,10.2l22.1-16.6a57.9,57.9,0,0,0,10.2,0l22.1,16.6a103.2,103.2,0,0,0,24.6-10.2l3.9-27.3c2.5-2.3,7.2-7.2,7.2-7.2l27.3-3.9a102.2,102.2,0,0,0,10.2-24.6ZM128,176a48,48,0,1,1,48-48A48,48,0,0,1,128,176Z",opacity:"0.2"}),s.createElement("circle",{cx:"128",cy:"128",r:"48",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("path",{d:"M183.7,65.1q3.8,3.5,7.2,7.2l27.3,3.9a103.2,103.2,0,0,1,10.2,24.6l-16.6,22.1s.3,6.8,0,10.2l16.6,22.1a102.2,102.2,0,0,1-10.2,24.6l-27.3,3.9s-4.7,4.9-7.2,7.2l-3.9,27.3a103.2,103.2,0,0,1-24.6,10.2l-22.1-16.6a57.9,57.9,0,0,1-10.2,0l-22.1,16.6a102.2,102.2,0,0,1-24.6-10.2l-3.9-27.3q-3.7-3.5-7.2-7.2l-27.3-3.9a103.2,103.2,0,0,1-10.2-24.6l16.6-22.1s-.2-6.8,0-10.2L27.6,100.8A102.2,102.2,0,0,1,37.8,76.2l27.3-3.9q3.5-3.7,7.2-7.2l3.9-27.3a103.2,103.2,0,0,1,24.6-10.2l22.1,16.6a57.9,57.9,0,0,1,10.2,0l22.1-16.6a102.2,102.2,0,0,1,24.6,10.2Z",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}))}),n.set("fill",function(){return s.createElement(s.Fragment,null,s.createElement("path",{d:"M234.8,150.4l-14.9-19.8c.1-1.8,0-3.7,0-5.1l14.9-19.9a7.8,7.8,0,0,0,1.3-6.9,114.8,114.8,0,0,0-10.9-26.4,8.2,8.2,0,0,0-5.8-4l-24.5-3.5-3.7-3.7-3.5-24.5a8.4,8.4,0,0,0-3.9-5.8,117.5,117.5,0,0,0-26.5-10.9,7.8,7.8,0,0,0-6.9,1.3L130.6,36h-5.2L105.6,21.2a7.8,7.8,0,0,0-6.9-1.3A114.8,114.8,0,0,0,72.3,30.8a8.2,8.2,0,0,0-4,5.8L64.8,61.1l-3.7,3.7L36.6,68.3a8.2,8.2,0,0,0-5.8,4A114.8,114.8,0,0,0,19.9,98.7a7.8,7.8,0,0,0,1.3,6.9l14.9,19.8v5.1L21.2,150.4a7.8,7.8,0,0,0-1.3,6.9,114.8,114.8,0,0,0,10.9,26.4,8.2,8.2,0,0,0,5.8,4l24.5,3.5,3.7,3.7,3.5,24.5a8.2,8.2,0,0,0,4,5.8,114.8,114.8,0,0,0,26.4,10.9,7.6,7.6,0,0,0,2.1.3,7.7,7.7,0,0,0,4.8-1.6L125.4,220h5.2l19.8,14.8a7.8,7.8,0,0,0,6.9,1.3,113,113,0,0,0,26.4-10.9,8.2,8.2,0,0,0,4-5.8l3.5-24.6c1.2-1.2,2.6-2.5,3.6-3.6l24.6-3.5a8.2,8.2,0,0,0,5.8-4,114.8,114.8,0,0,0,10.9-26.4A7.8,7.8,0,0,0,234.8,150.4ZM128,172a44,44,0,1,1,44-44A44,44,0,0,1,128,172Z"}))}),n.set("light",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"128",cy:"128",r:"48",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("path",{d:"M183.7,65.1q3.8,3.5,7.2,7.2l27.3,3.9a103.2,103.2,0,0,1,10.2,24.6l-16.6,22.1s.3,6.8,0,10.2l16.6,22.1a102.2,102.2,0,0,1-10.2,24.6l-27.3,3.9s-4.7,4.9-7.2,7.2l-3.9,27.3a103.2,103.2,0,0,1-24.6,10.2l-22.1-16.6a57.9,57.9,0,0,1-10.2,0l-22.1,16.6a102.2,102.2,0,0,1-24.6-10.2l-3.9-27.3q-3.7-3.5-7.2-7.2l-27.3-3.9a103.2,103.2,0,0,1-10.2-24.6l16.6-22.1s-.3-6.8,0-10.2L27.6,100.8A102.2,102.2,0,0,1,37.8,76.2l27.3-3.9q3.5-3.7,7.2-7.2l3.9-27.3a103.2,103.2,0,0,1,24.6-10.2l22.1,16.6a57.9,57.9,0,0,1,10.2,0l22.1-16.6a102.2,102.2,0,0,1,24.6,10.2Z",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}))}),n.set("thin",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"128",cy:"128",r:"48",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("path",{d:"M183.7,65.1q3.8,3.5,7.2,7.2l27.3,3.9a103.2,103.2,0,0,1,10.2,24.6l-16.6,22.1s.3,6.8,0,10.2l16.6,22.1a102.2,102.2,0,0,1-10.2,24.6l-27.3,3.9s-4.7,4.9-7.2,7.2l-3.9,27.3a103.2,103.2,0,0,1-24.6,10.2l-22.1-16.6a57.9,57.9,0,0,1-10.2,0l-22.1,16.6a102.2,102.2,0,0,1-24.6-10.2l-3.9-27.3q-3.7-3.5-7.2-7.2l-27.3-3.9a103.2,103.2,0,0,1-10.2-24.6l16.6-22.1s-.3-6.8,0-10.2L27.6,100.8A102.2,102.2,0,0,1,37.8,76.2l27.3-3.9q3.5-3.7,7.2-7.2l3.9-27.3a103.2,103.2,0,0,1,24.6-10.2l22.1,16.6a57.9,57.9,0,0,1,10.2,0l22.1-16.6a102.2,102.2,0,0,1,24.6,10.2Z",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}))}),n.set("regular",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"128",cy:"128",r:"48",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("path",{d:"M183.7,65.1q3.8,3.5,7.2,7.2l27.3,3.9a103.2,103.2,0,0,1,10.2,24.6l-16.6,22.1s.3,6.8,0,10.2l16.6,22.1a102.2,102.2,0,0,1-10.2,24.6l-27.3,3.9s-4.7,4.9-7.2,7.2l-3.9,27.3a103.2,103.2,0,0,1-24.6,10.2l-22.1-16.6a57.9,57.9,0,0,1-10.2,0l-22.1,16.6a102.2,102.2,0,0,1-24.6-10.2l-3.9-27.3q-3.7-3.5-7.2-7.2l-27.3-3.9a103.2,103.2,0,0,1-10.2-24.6l16.6-22.1s-.3-6.8,0-10.2L27.6,100.8A102.2,102.2,0,0,1,37.8,76.2l27.3-3.9q3.5-3.7,7.2-7.2l3.9-27.3a103.2,103.2,0,0,1,24.6-10.2l22.1,16.6a57.9,57.9,0,0,1,10.2,0l22.1-16.6a102.2,102.2,0,0,1,24.6,10.2Z",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}))});var R=function(e,E){return(0,r._)(e,E,n)},o=(0,s.forwardRef)(function(e,E){return s.createElement(T.Z,Object.assign({ref:E},e,{renderPath:R}))});o.displayName="Gear",E.Z=o},36031:function(e,E,t){"use strict";var s=t(67294),r=t(19818),T=t(77258),n=new Map;n.set("bold",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"64",cy:"128",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("circle",{cx:"176",cy:"200",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("circle",{cx:"176",cy:"56",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("line",{x1:"149.1",y1:"73.3",x2:"90.9",y2:"110.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("line",{x1:"90.9",y1:"145.3",x2:"149.1",y2:"182.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}))}),n.set("duotone",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"176",cy:"200",r:"32",opacity:"0.2"}),s.createElement("circle",{cx:"176",cy:"56",r:"32",opacity:"0.2"}),s.createElement("circle",{cx:"64",cy:"128",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("circle",{cx:"176",cy:"200",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("circle",{cx:"176",cy:"56",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"149.1",y1:"73.3",x2:"90.9",y2:"110.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"90.9",y1:"145.3",x2:"149.1",y2:"182.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}))}),n.set("fill",function(){return s.createElement(s.Fragment,null,s.createElement("path",{d:"M176,160a39.7,39.7,0,0,0-28.6,12.1l-46.1-29.6a40.3,40.3,0,0,0,0-29l46.1-29.6A40,40,0,1,0,136,56a41,41,0,0,0,2.7,14.5L92.6,100.1a40,40,0,1,0,0,55.8l46.1,29.6A41,41,0,0,0,136,200a40,40,0,1,0,40-40Z"}))}),n.set("light",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"64",cy:"128",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("circle",{cx:"176",cy:"200",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("circle",{cx:"176",cy:"56",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("line",{x1:"149.1",y1:"73.3",x2:"90.9",y2:"110.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("line",{x1:"90.9",y1:"145.3",x2:"149.1",y2:"182.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}))}),n.set("thin",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"64",cy:"128",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("circle",{cx:"176",cy:"200",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("circle",{cx:"176",cy:"56",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("line",{x1:"149.1",y1:"73.3",x2:"90.9",y2:"110.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("line",{x1:"90.9",y1:"145.3",x2:"149.1",y2:"182.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}))}),n.set("regular",function(e){return s.createElement(s.Fragment,null,s.createElement("circle",{cx:"64",cy:"128",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("circle",{cx:"176",cy:"200",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("circle",{cx:"176",cy:"56",r:"32",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"149.1",y1:"73.3",x2:"90.9",y2:"110.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"90.9",y1:"145.3",x2:"149.1",y2:"182.7",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}))});var R=function(e,E){return(0,r._)(e,E,n)},o=(0,s.forwardRef)(function(e,E){return s.createElement(T.Z,Object.assign({ref:E},e,{renderPath:R}))});o.displayName="ShareNetwork",E.Z=o},48114:function(e,E,t){"use strict";var s=t(67294),r=t(19818),T=t(77258),n=new Map;n.set("bold",function(e){return s.createElement(s.Fragment,null,s.createElement("line",{x1:"120",y1:"128",x2:"216",y2:"128",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("line",{x1:"120",y1:"64",x2:"216",y2:"64",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("line",{x1:"40",y1:"192",x2:"216",y2:"192",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}),s.createElement("polyline",{points:"40 56 80 96 40 136",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"24"}))}),n.set("duotone",function(e){return s.createElement(s.Fragment,null,s.createElement("line",{x1:"112",y1:"128",x2:"216",y2:"128",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"112",y1:"64",x2:"216",y2:"64",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"40",y1:"192",x2:"216",y2:"192",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("polyline",{points:"40 56 80 96 40 136",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}))}),n.set("fill",function(){return s.createElement(s.Fragment,null,s.createElement("path",{d:"M224,128a8,8,0,0,1-8,8H120a8,8,0,0,1,0-16h96A8,8,0,0,1,224,128ZM120,72h96a8,8,0,0,0,0-16H120a8,8,0,0,0,0,16Zm96,112H40a8,8,0,0,0,0,16H216a8,8,0,0,0,0-16ZM36.9,143.4a8.5,8.5,0,0,0,3.1.6,8.3,8.3,0,0,0,5.7-2.3l40-40a8.1,8.1,0,0,0,0-11.4l-40-40a8.4,8.4,0,0,0-8.8-1.7A8,8,0,0,0,32,56v80A8,8,0,0,0,36.9,143.4Z"}))}),n.set("light",function(e){return s.createElement(s.Fragment,null,s.createElement("line",{x1:"112",y1:"128",x2:"216",y2:"128",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("line",{x1:"112",y1:"64",x2:"216",y2:"64",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("line",{x1:"40",y1:"192",x2:"216",y2:"192",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}),s.createElement("polyline",{points:"40 56 80 96 40 136",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"12"}))}),n.set("thin",function(e){return s.createElement(s.Fragment,null,s.createElement("line",{x1:"112",y1:"128",x2:"216",y2:"128",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("line",{x1:"112",y1:"64",x2:"216",y2:"64",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("line",{x1:"40",y1:"192",x2:"216",y2:"192",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}),s.createElement("polyline",{points:"40 56 80 96 40 136",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"8"}))}),n.set("regular",function(e){return s.createElement(s.Fragment,null,s.createElement("line",{x1:"112",y1:"128",x2:"216",y2:"128",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"112",y1:"64",x2:"216",y2:"64",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("line",{x1:"40",y1:"192",x2:"216",y2:"192",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}),s.createElement("polyline",{points:"40 56 80 96 40 136",fill:"none",stroke:e,strokeLinecap:"round",strokeLinejoin:"round",strokeWidth:"16"}))});var R=function(e,E){return(0,r._)(e,E,n)},o=(0,s.forwardRef)(function(e,E){return s.createElement(T.Z,Object.assign({ref:E},e,{renderPath:R}))});o.displayName="TextIndent",E.Z=o},74300:function(e,E,t){"use strict";function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}Object.defineProperty(E,"__esModule",{value:!0}),E.CopyToClipboard=void 0;var r=R(t(67294)),T=R(t(20640)),n=["text","onCopy","options","children"];function R(e){return e&&e.__esModule?e:{default:e}}function o(e,E){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);E&&(s=s.filter(function(E){return Object.getOwnPropertyDescriptor(e,E).enumerable})),t.push.apply(t,s)}return t}function i(e){for(var E=1;E<arguments.length;E++){var t=null!=arguments[E]?arguments[E]:{};E%2?o(Object(t),!0).forEach(function(E){I(e,E,t[E])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach(function(E){Object.defineProperty(e,E,Object.getOwnPropertyDescriptor(t,E))})}return e}function A(e,E){for(var t=0;t<E.length;t++){var s=E[t];s.enumerable=s.enumerable||!1,s.configurable=!0,"value"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}function a(e,E){return(a=Object.setPrototypeOf||function(e,E){return e.__proto__=E,e})(e,E)}function S(e){if(void 0===e)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function N(e){return(N=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function I(e,E,t){return E in e?Object.defineProperty(e,E,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[E]=t,e}var _=function(e){!function(e,E){if("function"!=typeof E&&null!==E)throw TypeError("Super expression must either be null or a function");e.prototype=Object.create(E&&E.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),E&&a(e,E)}(_,e);var E,t,R,o=(E=function(){if("undefined"==typeof Reflect||!Reflect.construct||Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],function(){})),!0}catch(e){return!1}}(),function(){var e,t=N(_);if(E){var r=N(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return function(e,E){if(E&&("object"===s(E)||"function"==typeof E))return E;if(void 0!==E)throw TypeError("Derived constructors may only return object or undefined");return S(e)}(this,e)});function _(){var e;!function(e,E){if(!(e instanceof E))throw TypeError("Cannot call a class as a function")}(this,_);for(var E=arguments.length,t=Array(E),s=0;s<E;s++)t[s]=arguments[s];return I(S(e=o.call.apply(o,[this].concat(t))),"onClick",function(E){var t=e.props,s=t.text,n=t.onCopy,R=t.children,o=t.options,i=r.default.Children.only(R),A=(0,T.default)(s,o);n&&n(s,A),i&&i.props&&"function"==typeof i.props.onClick&&i.props.onClick(E)}),e}return t=[{key:"render",value:function(){var e=this.props,E=(e.text,e.onCopy,e.options,e.children),t=function(e,E){if(null==e)return{};var t,s,r=function(e,E){if(null==e)return{};var t,s,r={},T=Object.keys(e);for(s=0;s<T.length;s++)t=T[s],E.indexOf(t)>=0||(r[t]=e[t]);return r}(e,E);if(Object.getOwnPropertySymbols){var T=Object.getOwnPropertySymbols(e);for(s=0;s<T.length;s++)t=T[s],!(E.indexOf(t)>=0)&&Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}(e,n),s=r.default.Children.only(E);return r.default.cloneElement(s,i(i({},t),{},{onClick:this.onClick}))}}],A(_.prototype,t),R&&A(_,R),Object.defineProperty(_,"prototype",{writable:!1}),_}(r.default.PureComponent);E.CopyToClipboard=_,I(_,"defaultProps",{onCopy:void 0,options:void 0})},74855:function(e,E,t){"use strict";var s=t(74300).CopyToClipboard;s.CopyToClipboard=s,e.exports=s},11742:function(e){e.exports=function(){var e=document.getSelection();if(!e.rangeCount)return function(){};for(var E=document.activeElement,t=[],s=0;s<e.rangeCount;s++)t.push(e.getRangeAt(s));switch(E.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":E.blur();break;default:E=null}return e.removeAllRanges(),function(){"Caret"===e.type&&e.removeAllRanges(),e.rangeCount||t.forEach(function(E){e.addRange(E)}),E&&E.focus()}}},85909:function(e,E,t){"use strict";t.d(E,{n:function(){return s}});let s=e=>e.flatMap(r),r=e=>i(o(e)).map(e=>e.trim()),T=/[^[\]{}]+/y,n=/\{.*?\}/y,R=/\[.*?\]/y,o=e=>{let E=0,t=[];for(;E<e.length;){T.lastIndex=E;let s=T.exec(e);s&&(t.push([s[0].trim()]),E+=s[0].length),R.lastIndex=E;let r=R.exec(e);if(r){let e=r[0].slice(1,-1).split("|").map(e=>e.trim());t.push(["",...e]),E+=r[0].length}n.lastIndex=E;let o=n.exec(e);if(o){let e=o[0].slice(1,-1).split("|").map(e=>e.trim());t.push(e),E+=o[0].length}if(!s&&!r&&!o)throw Error(`Unbalanced parenthesis in: ${e}`)}return t},i=([e,...E])=>void 0===e?[""]:i(E).flatMap(E=>e.map(e=>e.trim()+" "+E.trim()))},93166:function(e,E,t){"use strict";t.d(E,{D:function(){return N}});var s=t(85909),r=t(21629);let T=(0,r.B3)({math:["ABS","ACOS","ACOSD","ACOSH","ASIN","ASIND","ASINH","ATAN","ATAN2","ATAN2D","ATAND","ATANH","CBRT","CEIL","CEILING","COS","COSD","COSH","COT","COTD","DEGREES","DIV","EXP","FACTORIAL","FLOOR","GCD","LCM","LN","LOG","LOG10","MIN_SCALE","MOD","PI","POWER","RADIANS","RANDOM","ROUND","SCALE","SETSEED","SIGN","SIN","SIND","SINH","SQRT","TAN","TAND","TANH","TRIM_SCALE","TRUNC","WIDTH_BUCKET"],string:["ABS","ASCII","BIT_LENGTH","BTRIM","CHARACTER_LENGTH","CHAR_LENGTH","CHR","CONCAT","CONCAT_WS","FORMAT","INITCAP","LEFT","LENGTH","LOWER","LPAD","LTRIM","MD5","NORMALIZE","OCTET_LENGTH","OVERLAY","PARSE_IDENT","PG_CLIENT_ENCODING","POSITION","QUOTE_IDENT","QUOTE_LITERAL","QUOTE_NULLABLE","REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE","REPEAT","REPLACE","REVERSE","RIGHT","RPAD","RTRIM","SPLIT_PART","SPRINTF","STARTS_WITH","STRING_AGG","STRING_TO_ARRAY","STRING_TO_TABLE","STRPOS","SUBSTR","SUBSTRING","TO_ASCII","TO_HEX","TRANSLATE","TRIM","UNISTR","UPPER"],binary:["BIT_COUNT","BIT_LENGTH","BTRIM","CONVERT","CONVERT_FROM","CONVERT_TO","DECODE","ENCODE","GET_BIT","GET_BYTE","LENGTH","LTRIM","MD5","OCTET_LENGTH","OVERLAY","POSITION","RTRIM","SET_BIT","SET_BYTE","SHA224","SHA256","SHA384","SHA512","STRING_AGG","SUBSTR","SUBSTRING","TRIM"],bitstring:["BIT_COUNT","BIT_LENGTH","GET_BIT","LENGTH","OCTET_LENGTH","OVERLAY","POSITION","SET_BIT","SUBSTRING"],pattern:["REGEXP_MATCH","REGEXP_MATCHES","REGEXP_REPLACE","REGEXP_SPLIT_TO_ARRAY","REGEXP_SPLIT_TO_TABLE"],datatype:["TO_CHAR","TO_DATE","TO_NUMBER","TO_TIMESTAMP"],datetime:["CLOCK_TIMESTAMP","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","DATE_BIN","DATE_PART","DATE_TRUNC","EXTRACT","ISFINITE","JUSTIFY_DAYS","JUSTIFY_HOURS","JUSTIFY_INTERVAL","LOCALTIME","LOCALTIMESTAMP","MAKE_DATE","MAKE_INTERVAL","MAKE_TIME","MAKE_TIMESTAMP","MAKE_TIMESTAMPTZ","NOW","PG_SLEEP","PG_SLEEP_FOR","PG_SLEEP_UNTIL","STATEMENT_TIMESTAMP","TIMEOFDAY","TO_TIMESTAMP","TRANSACTION_TIMESTAMP"],enum:["ENUM_FIRST","ENUM_LAST","ENUM_RANGE"],geometry:["AREA","BOUND_BOX","BOX","CENTER","CIRCLE","DIAGONAL","DIAMETER","HEIGHT","ISCLOSED","ISOPEN","LENGTH","LINE","LSEG","NPOINTS","PATH","PCLOSE","POINT","POLYGON","POPEN","RADIUS","SLOPE","WIDTH"],network:["ABBREV","BROADCAST","FAMILY","HOST","HOSTMASK","INET_MERGE","INET_SAME_FAMILY","MACADDR8_SET7BIT","MASKLEN","NETMASK","NETWORK","SET_MASKLEN","TEXT","TRUNC"],textsearch:["ARRAY_TO_TSVECTOR","GET_CURRENT_TS_CONFIG","JSONB_TO_TSVECTOR","JSON_TO_TSVECTOR","LENGTH","NUMNODE","PHRASETO_TSQUERY","PLAINTO_TSQUERY","QUERYTREE","SETWEIGHT","STRIP","TO_TSQUERY","TO_TSVECTOR","TSQUERY_PHRASE","TSVECTOR_TO_ARRAY","TS_DEBUG","TS_DELETE","TS_FILTER","TS_HEADLINE","TS_LEXIZE","TS_PARSE","TS_RANK","TS_RANK_CD","TS_REWRITE","TS_STAT","TS_TOKEN_TYPE","WEBSEARCH_TO_TSQUERY"],uuid:["UUID"],xml:["CURSOR_TO_XML","CURSOR_TO_XMLSCHEMA","DATABASE_TO_XML","DATABASE_TO_XMLSCHEMA","DATABASE_TO_XML_AND_XMLSCHEMA","NEXTVAL","QUERY_TO_XML","QUERY_TO_XMLSCHEMA","QUERY_TO_XML_AND_XMLSCHEMA","SCHEMA_TO_XML","SCHEMA_TO_XMLSCHEMA","SCHEMA_TO_XML_AND_XMLSCHEMA","STRING","TABLE_TO_XML","TABLE_TO_XMLSCHEMA","TABLE_TO_XML_AND_XMLSCHEMA","XMLAGG","XMLCOMMENT","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","XML_IS_WELL_FORMED","XML_IS_WELL_FORMED_CONTENT","XML_IS_WELL_FORMED_DOCUMENT","XPATH","XPATH_EXISTS"],json:["ARRAY_TO_JSON","JSONB_AGG","JSONB_ARRAY_ELEMENTS","JSONB_ARRAY_ELEMENTS_TEXT","JSONB_ARRAY_LENGTH","JSONB_BUILD_ARRAY","JSONB_BUILD_OBJECT","JSONB_EACH","JSONB_EACH_TEXT","JSONB_EXTRACT_PATH","JSONB_EXTRACT_PATH_TEXT","JSONB_INSERT","JSONB_OBJECT","JSONB_OBJECT_AGG","JSONB_OBJECT_KEYS","JSONB_PATH_EXISTS","JSONB_PATH_EXISTS_TZ","JSONB_PATH_MATCH","JSONB_PATH_MATCH_TZ","JSONB_PATH_QUERY","JSONB_PATH_QUERY_ARRAY","JSONB_PATH_QUERY_ARRAY_TZ","JSONB_PATH_QUERY_FIRST","JSONB_PATH_QUERY_FIRST_TZ","JSONB_PATH_QUERY_TZ","JSONB_POPULATE_RECORD","JSONB_POPULATE_RECORDSET","JSONB_PRETTY","JSONB_SET","JSONB_SET_LAX","JSONB_STRIP_NULLS","JSONB_TO_RECORD","JSONB_TO_RECORDSET","JSONB_TYPEOF","JSON_AGG","JSON_ARRAY_ELEMENTS","JSON_ARRAY_ELEMENTS_TEXT","JSON_ARRAY_LENGTH","JSON_BUILD_ARRAY","JSON_BUILD_OBJECT","JSON_EACH","JSON_EACH_TEXT","JSON_EXTRACT_PATH","JSON_EXTRACT_PATH_TEXT","JSON_OBJECT","JSON_OBJECT_AGG","JSON_OBJECT_KEYS","JSON_POPULATE_RECORD","JSON_POPULATE_RECORDSET","JSON_STRIP_NULLS","JSON_TO_RECORD","JSON_TO_RECORDSET","JSON_TYPEOF","ROW_TO_JSON","TO_JSON","TO_JSONB","TO_TIMESTAMP"],sequence:["CURRVAL","LASTVAL","NEXTVAL","SETVAL"],conditional:["COALESCE","GREATEST","LEAST","NULLIF"],array:["ARRAY_AGG","ARRAY_APPEND","ARRAY_CAT","ARRAY_DIMS","ARRAY_FILL","ARRAY_LENGTH","ARRAY_LOWER","ARRAY_NDIMS","ARRAY_POSITION","ARRAY_POSITIONS","ARRAY_PREPEND","ARRAY_REMOVE","ARRAY_REPLACE","ARRAY_TO_STRING","ARRAY_UPPER","CARDINALITY","STRING_TO_ARRAY","TRIM_ARRAY","UNNEST"],range:["ISEMPTY","LOWER","LOWER_INC","LOWER_INF","MULTIRANGE","RANGE_MERGE","UPPER","UPPER_INC","UPPER_INF"],aggregate:["ARRAY_AGG","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COALESCE","CORR","COUNT","COVAR_POP","COVAR_SAMP","CUME_DIST","DENSE_RANK","EVERY","GROUPING","JSONB_AGG","JSONB_OBJECT_AGG","JSON_AGG","JSON_OBJECT_AGG","MAX","MIN","MODE","PERCENTILE_CONT","PERCENTILE_DISC","PERCENT_RANK","RANGE_AGG","RANGE_INTERSECT_AGG","RANK","REGR_AVGX","REGR_AVGY","REGR_COUNT","REGR_INTERCEPT","REGR_R2","REGR_SLOPE","REGR_SXX","REGR_SXY","REGR_SYY","STDDEV","STDDEV_POP","STDDEV_SAMP","STRING_AGG","SUM","TO_JSON","TO_JSONB","VARIANCE","VAR_POP","VAR_SAMP","XMLAGG"],window:["CUME_DIST","DENSE_RANK","FIRST_VALUE","LAG","LAST_VALUE","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER"],set:["GENERATE_SERIES","GENERATE_SUBSCRIPTS"],sysInfo:["ACLDEFAULT","ACLEXPLODE","COL_DESCRIPTION","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_QUERY","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_SCHEMAS","CURRENT_USER","FORMAT_TYPE","HAS_ANY_COLUMN_PRIVILEGE","HAS_COLUMN_PRIVILEGE","HAS_DATABASE_PRIVILEGE","HAS_FOREIGN_DATA_WRAPPER_PRIVILEGE","HAS_FUNCTION_PRIVILEGE","HAS_LANGUAGE_PRIVILEGE","HAS_SCHEMA_PRIVILEGE","HAS_SEQUENCE_PRIVILEGE","HAS_SERVER_PRIVILEGE","HAS_TABLESPACE_PRIVILEGE","HAS_TABLE_PRIVILEGE","HAS_TYPE_PRIVILEGE","INET_CLIENT_ADDR","INET_CLIENT_PORT","INET_SERVER_ADDR","INET_SERVER_PORT","MAKEACLITEM","OBJ_DESCRIPTION","PG_BACKEND_PID","PG_BLOCKING_PIDS","PG_COLLATION_IS_VISIBLE","PG_CONF_LOAD_TIME","PG_CONTROL_CHECKPOINT","PG_CONTROL_INIT","PG_CONTROL_SYSTEM","PG_CONVERSION_IS_VISIBLE","PG_CURRENT_LOGFILE","PG_CURRENT_SNAPSHOT","PG_CURRENT_XACT_ID","PG_CURRENT_XACT_ID_IF_ASSIGNED","PG_DESCRIBE_OBJECT","PG_FUNCTION_IS_VISIBLE","PG_GET_CATALOG_FOREIGN_KEYS","PG_GET_CONSTRAINTDEF","PG_GET_EXPR","PG_GET_FUNCTIONDEF","PG_GET_FUNCTION_ARGUMENTS","PG_GET_FUNCTION_IDENTITY_ARGUMENTS","PG_GET_FUNCTION_RESULT","PG_GET_INDEXDEF","PG_GET_KEYWORDS","PG_GET_OBJECT_ADDRESS","PG_GET_OWNED_SEQUENCE","PG_GET_RULEDEF","PG_GET_SERIAL_SEQUENCE","PG_GET_STATISTICSOBJDEF","PG_GET_TRIGGERDEF","PG_GET_USERBYID","PG_GET_VIEWDEF","PG_HAS_ROLE","PG_IDENTIFY_OBJECT","PG_IDENTIFY_OBJECT_AS_ADDRESS","PG_INDEXAM_HAS_PROPERTY","PG_INDEX_COLUMN_HAS_PROPERTY","PG_INDEX_HAS_PROPERTY","PG_IS_OTHER_TEMP_SCHEMA","PG_JIT_AVAILABLE","PG_LAST_COMMITTED_XACT","PG_LISTENING_CHANNELS","PG_MY_TEMP_SCHEMA","PG_NOTIFICATION_QUEUE_USAGE","PG_OPCLASS_IS_VISIBLE","PG_OPERATOR_IS_VISIBLE","PG_OPFAMILY_IS_VISIBLE","PG_OPTIONS_TO_TABLE","PG_POSTMASTER_START_TIME","PG_SAFE_SNAPSHOT_BLOCKING_PIDS","PG_SNAPSHOT_XIP","PG_SNAPSHOT_XMAX","PG_SNAPSHOT_XMIN","PG_STATISTICS_OBJ_IS_VISIBLE","PG_TABLESPACE_DATABASES","PG_TABLESPACE_LOCATION","PG_TABLE_IS_VISIBLE","PG_TRIGGER_DEPTH","PG_TS_CONFIG_IS_VISIBLE","PG_TS_DICT_IS_VISIBLE","PG_TS_PARSER_IS_VISIBLE","PG_TS_TEMPLATE_IS_VISIBLE","PG_TYPEOF","PG_TYPE_IS_VISIBLE","PG_VISIBLE_IN_SNAPSHOT","PG_XACT_COMMIT_TIMESTAMP","PG_XACT_COMMIT_TIMESTAMP_ORIGIN","PG_XACT_STATUS","PQSERVERVERSION","ROW_SECURITY_ACTIVE","SESSION_USER","SHOBJ_DESCRIPTION","TO_REGCLASS","TO_REGCOLLATION","TO_REGNAMESPACE","TO_REGOPER","TO_REGOPERATOR","TO_REGPROC","TO_REGPROCEDURE","TO_REGROLE","TO_REGTYPE","TXID_CURRENT","TXID_CURRENT_IF_ASSIGNED","TXID_CURRENT_SNAPSHOT","TXID_SNAPSHOT_XIP","TXID_SNAPSHOT_XMAX","TXID_SNAPSHOT_XMIN","TXID_STATUS","TXID_VISIBLE_IN_SNAPSHOT","USER","VERSION"],sysAdmin:["BRIN_DESUMMARIZE_RANGE","BRIN_SUMMARIZE_NEW_VALUES","BRIN_SUMMARIZE_RANGE","CONVERT_FROM","CURRENT_SETTING","GIN_CLEAN_PENDING_LIST","PG_ADVISORY_LOCK","PG_ADVISORY_LOCK_SHARED","PG_ADVISORY_UNLOCK","PG_ADVISORY_UNLOCK_ALL","PG_ADVISORY_UNLOCK_SHARED","PG_ADVISORY_XACT_LOCK","PG_ADVISORY_XACT_LOCK_SHARED","PG_BACKUP_START_TIME","PG_CANCEL_BACKEND","PG_COLLATION_ACTUAL_VERSION","PG_COLUMN_COMPRESSION","PG_COLUMN_SIZE","PG_COPY_LOGICAL_REPLICATION_SLOT","PG_COPY_PHYSICAL_REPLICATION_SLOT","PG_CREATE_LOGICAL_REPLICATION_SLOT","PG_CREATE_PHYSICAL_REPLICATION_SLOT","PG_CREATE_RESTORE_POINT","PG_CURRENT_WAL_FLUSH_LSN","PG_CURRENT_WAL_INSERT_LSN","PG_CURRENT_WAL_LSN","PG_DATABASE_SIZE","PG_DROP_REPLICATION_SLOT","PG_EXPORT_SNAPSHOT","PG_FILENODE_RELATION","PG_GET_WAL_REPLAY_PAUSE_STATE","PG_IMPORT_SYSTEM_COLLATIONS","PG_INDEXES_SIZE","PG_IS_IN_BACKUP","PG_IS_IN_RECOVERY","PG_IS_WAL_REPLAY_PAUSED","PG_LAST_WAL_RECEIVE_LSN","PG_LAST_WAL_REPLAY_LSN","PG_LAST_XACT_REPLAY_TIMESTAMP","PG_LOGICAL_EMIT_MESSAGE","PG_LOGICAL_SLOT_GET_BINARY_CHANGES","PG_LOGICAL_SLOT_GET_CHANGES","PG_LOGICAL_SLOT_PEEK_BINARY_CHANGES","PG_LOGICAL_SLOT_PEEK_CHANGES","PG_LOG_BACKEND_MEMORY_CONTEXTS","PG_LS_ARCHIVE_STATUSDIR","PG_LS_DIR","PG_LS_LOGDIR","PG_LS_TMPDIR","PG_LS_WALDIR","PG_PARTITION_ANCESTORS","PG_PARTITION_ROOT","PG_PARTITION_TREE","PG_PROMOTE","PG_READ_BINARY_FILE","PG_READ_FILE","PG_RELATION_FILENODE","PG_RELATION_FILEPATH","PG_RELATION_SIZE","PG_RELOAD_CONF","PG_REPLICATION_ORIGIN_ADVANCE","PG_REPLICATION_ORIGIN_CREATE","PG_REPLICATION_ORIGIN_DROP","PG_REPLICATION_ORIGIN_OID","PG_REPLICATION_ORIGIN_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_IS_SETUP","PG_REPLICATION_ORIGIN_SESSION_PROGRESS","PG_REPLICATION_ORIGIN_SESSION_RESET","PG_REPLICATION_ORIGIN_SESSION_SETUP","PG_REPLICATION_ORIGIN_XACT_RESET","PG_REPLICATION_ORIGIN_XACT_SETUP","PG_REPLICATION_SLOT_ADVANCE","PG_ROTATE_LOGFILE","PG_SIZE_BYTES","PG_SIZE_PRETTY","PG_START_BACKUP","PG_STAT_FILE","PG_STOP_BACKUP","PG_SWITCH_WAL","PG_TABLESPACE_SIZE","PG_TABLE_SIZE","PG_TERMINATE_BACKEND","PG_TOTAL_RELATION_SIZE","PG_TRY_ADVISORY_LOCK","PG_TRY_ADVISORY_LOCK_SHARED","PG_TRY_ADVISORY_XACT_LOCK","PG_TRY_ADVISORY_XACT_LOCK_SHARED","PG_WALFILE_NAME","PG_WALFILE_NAME_OFFSET","PG_WAL_LSN_DIFF","PG_WAL_REPLAY_PAUSE","PG_WAL_REPLAY_RESUME","SET_CONFIG"],trigger:["SUPPRESS_REDUNDANT_UPDATES_TRIGGER","TSVECTOR_UPDATE_TRIGGER","TSVECTOR_UPDATE_TRIGGER_COLUMN"],eventTrigger:["PG_EVENT_TRIGGER_DDL_COMMANDS","PG_EVENT_TRIGGER_DROPPED_OBJECTS","PG_EVENT_TRIGGER_TABLE_REWRITE_OID","PG_EVENT_TRIGGER_TABLE_REWRITE_REASON","PG_GET_OBJECT_ADDRESS"],stats:["PG_MCV_LIST_ITEMS"],cast:["CAST"],dataTypes:["BIT","BIT VARYING","CHARACTER","CHARACTER VARYING","VARCHAR","CHAR","DECIMAL","NUMERIC","TIME","TIMESTAMP","ENUM"]}),n=(0,r.B3)({all:["ABORT","ABSOLUTE","ACCESS","ACTION","ADD","ADMIN","AFTER","AGGREGATE","ALL","ALSO","ALTER","ALWAYS","ANALYSE","ANALYZE","AND","ANY","ARRAY","AS","ASC","ASENSITIVE","ASSERTION","ASSIGNMENT","ASYMMETRIC","AT","ATOMIC","ATTACH","ATTRIBUTE","AUTHORIZATION","BACKWARD","BEFORE","BEGIN","BETWEEN","BIGINT","BINARY","BIT","BOOLEAN","BOTH","BREADTH","BY","CACHE","CALL","CALLED","CASCADE","CASCADED","CASE","CAST","CATALOG","CHAIN","CHAR","CHARACTER","CHARACTERISTICS","CHECK","CHECKPOINT","CLASS","CLOSE","CLUSTER","COALESCE","COLLATE","COLLATION","COLUMN","COLUMNS","COMMENT","COMMENTS","COMMIT","COMMITTED","COMPRESSION","CONCURRENTLY","CONFIGURATION","CONFLICT","CONNECTION","CONSTRAINT","CONSTRAINTS","CONTENT","CONTINUE","CONVERSION","COPY","COST","CREATE","CROSS","CSV","CUBE","CURRENT","CURRENT_CATALOG","CURRENT_DATE","CURRENT_ROLE","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","CURSOR","CYCLE","DATA","DATABASE","DAY","DEALLOCATE","DEC","DECIMAL","DECLARE","DEFAULT","DEFAULTS","DEFERRABLE","DEFERRED","DEFINER","DELETE","DELIMITER","DELIMITERS","DEPENDS","DEPTH","DESC","DETACH","DICTIONARY","DISABLE","DISCARD","DISTINCT","DO","DOCUMENT","DOMAIN","DOUBLE","DROP","EACH","ELSE","ENABLE","ENCODING","ENCRYPTED","END","ENUM","ESCAPE","EVENT","EXCEPT","EXCLUDE","EXCLUDING","EXCLUSIVE","EXECUTE","EXISTS","EXPLAIN","EXPRESSION","EXTENSION","EXTERNAL","EXTRACT","FALSE","FAMILY","FETCH","FILTER","FINALIZE","FIRST","FLOAT","FOLLOWING","FOR","FORCE","FOREIGN","FORWARD","FREEZE","FROM","FULL","FUNCTION","FUNCTIONS","GENERATED","GLOBAL","GRANT","GRANTED","GREATEST","GROUP","GROUPING","GROUPS","HANDLER","HAVING","HEADER","HOLD","HOUR","IDENTITY","IF","ILIKE","IMMEDIATE","IMMUTABLE","IMPLICIT","IMPORT","IN","INCLUDE","INCLUDING","INCREMENT","INDEX","INDEXES","INHERIT","INHERITS","INITIALLY","INLINE","INNER","INOUT","INPUT","INSENSITIVE","INSERT","INSTEAD","INT","INTEGER","INTERSECT","INTERVAL","INTO","INVOKER","IS","ISNULL","ISOLATION","JOIN","KEY","LABEL","LANGUAGE","LARGE","LAST","LATERAL","LEADING","LEAKPROOF","LEAST","LEFT","LEVEL","LIKE","LIMIT","LISTEN","LOAD","LOCAL","LOCALTIME","LOCALTIMESTAMP","LOCATION","LOCK","LOCKED","LOGGED","MAPPING","MATCH","MATERIALIZED","MAXVALUE","METHOD","MINUTE","MINVALUE","MODE","MONTH","MOVE","NAME","NAMES","NATIONAL","NATURAL","NCHAR","NEW","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NORMALIZE","NORMALIZED","NOT","NOTHING","NOTIFY","NOTNULL","NOWAIT","NULL","NULLIF","NULLS","NUMERIC","OBJECT","OF","OFF","OFFSET","OIDS","OLD","ON","ONLY","OPERATOR","OPTION","OPTIONS","OR","ORDER","ORDINALITY","OTHERS","OUT","OUTER","OVER","OVERLAPS","OVERLAY","OVERRIDING","OWNED","OWNER","PARALLEL","PARSER","PARTIAL","PARTITION","PASSING","PASSWORD","PLACING","PLANS","POLICY","POSITION","PRECEDING","PRECISION","PREPARE","PREPARED","PRESERVE","PRIMARY","PRIOR","PRIVILEGES","PROCEDURAL","PROCEDURE","PROCEDURES","PROGRAM","PUBLICATION","QUOTE","RANGE","READ","REAL","REASSIGN","RECHECK","RECURSIVE","REF","REFERENCES","REFERENCING","REFRESH","REINDEX","RELATIVE","RELEASE","RENAME","REPEATABLE","REPLACE","REPLICA","RESET","RESTART","RESTRICT","RETURN","RETURNING","RETURNS","REVOKE","RIGHT","ROLE","ROLLBACK","ROLLUP","ROUTINE","ROUTINES","ROW","ROWS","RULE","SAVEPOINT","SCHEMA","SCHEMAS","SCROLL","SEARCH","SECOND","SECURITY","SELECT","SEQUENCE","SEQUENCES","SERIALIZABLE","SERVER","SESSION","SESSION_USER","SET","SETOF","SETS","SHARE","SHOW","SIMILAR","SIMPLE","SKIP","SMALLINT","SNAPSHOT","SOME","SQL","STABLE","STANDALONE","START","STATEMENT","STATISTICS","STDIN","STDOUT","STORAGE","STORED","STRICT","STRIP","SUBSCRIPTION","SUBSTRING","SUPPORT","SYMMETRIC","SYSID","SYSTEM","TABLE","TABLES","TABLESAMPLE","TABLESPACE","TEMP","TEMPLATE","TEMPORARY","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRANSFORM","TREAT","TRIGGER","TRIM","TRUE","TRUNCATE","TRUSTED","TYPE","TYPES","UESCAPE","UNBOUNDED","UNCOMMITTED","UNENCRYPTED","UNION","UNIQUE","UNKNOWN","UNLISTEN","UNLOGGED","UNTIL","UPDATE","USER","USING","VACUUM","VALID","VALIDATE","VALIDATOR","VALUE","VALUES","VARCHAR","VARIADIC","VARYING","VERBOSE","VERSION","VIEW","VIEWS","VOLATILE","WHEN","WHERE","WHITESPACE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","XML","XMLATTRIBUTES","XMLCONCAT","XMLELEMENT","XMLEXISTS","XMLFOREST","XMLNAMESPACES","XMLPARSE","XMLPI","XMLROOT","XMLSERIALIZE","XMLTABLE","YEAR","YES","ZONE"]}),R=(0,s.n)(["SELECT [ALL | DISTINCT]"]),o=(0,s.n)(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [OR REPLACE] [TEMP | TEMPORARY] [RECURSIVE] VIEW","CREATE MATERIALIZED VIEW [IF NOT EXISTS]","CREATE [GLOBAL | LOCAL] [TEMPORARY | TEMP | UNLOGGED] TABLE [IF NOT EXISTS]","RETURNING"]),i=(0,s.n)(["UPDATE [ONLY]","WHERE CURRENT OF","ON CONFLICT","DELETE FROM [ONLY]","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS] [ONLY]","ALTER TABLE ALL IN TABLESPACE","RENAME [COLUMN]","RENAME TO","ADD [COLUMN] [IF NOT EXISTS]","DROP [COLUMN] [IF EXISTS]","ALTER [COLUMN]","[SET DATA] TYPE","{SET | DROP} DEFAULT","{SET | DROP} NOT NULL","TRUNCATE [TABLE] [ONLY]","SET SCHEMA","AFTER","ABORT","ALTER AGGREGATE","ALTER COLLATION","ALTER CONVERSION","ALTER DATABASE","ALTER DEFAULT PRIVILEGES","ALTER DOMAIN","ALTER EVENT TRIGGER","ALTER EXTENSION","ALTER FOREIGN DATA WRAPPER","ALTER FOREIGN TABLE","ALTER FUNCTION","ALTER GROUP","ALTER INDEX","ALTER LANGUAGE","ALTER LARGE OBJECT","ALTER MATERIALIZED VIEW","ALTER OPERATOR","ALTER OPERATOR CLASS","ALTER OPERATOR FAMILY","ALTER POLICY","ALTER PROCEDURE","ALTER PUBLICATION","ALTER ROLE","ALTER ROUTINE","ALTER RULE","ALTER SCHEMA","ALTER SEQUENCE","ALTER SERVER","ALTER STATISTICS","ALTER SUBSCRIPTION","ALTER SYSTEM","ALTER TABLESPACE","ALTER TEXT SEARCH CONFIGURATION","ALTER TEXT SEARCH DICTIONARY","ALTER TEXT SEARCH PARSER","ALTER TEXT SEARCH TEMPLATE","ALTER TRIGGER","ALTER TYPE","ALTER USER","ALTER USER MAPPING","ALTER VIEW","ANALYZE","BEGIN","CALL","CHECKPOINT","CLOSE","CLUSTER","COMMENT","COMMIT","COMMIT PREPARED","COPY","CREATE ACCESS METHOD","CREATE AGGREGATE","CREATE CAST","CREATE COLLATION","CREATE CONVERSION","CREATE DATABASE","CREATE DOMAIN","CREATE EVENT TRIGGER","CREATE EXTENSION","CREATE FOREIGN DATA WRAPPER","CREATE FOREIGN TABLE","CREATE FUNCTION","CREATE GROUP","CREATE INDEX","CREATE LANGUAGE","CREATE OPERATOR","CREATE OPERATOR CLASS","CREATE OPERATOR FAMILY","CREATE POLICY","CREATE PROCEDURE","CREATE PUBLICATION","CREATE ROLE","CREATE RULE","CREATE SCHEMA","CREATE SEQUENCE","CREATE SERVER","CREATE STATISTICS","CREATE SUBSCRIPTION","CREATE TABLESPACE","CREATE TEXT SEARCH CONFIGURATION","CREATE TEXT SEARCH DICTIONARY","CREATE TEXT SEARCH PARSER","CREATE TEXT SEARCH TEMPLATE","CREATE TRANSFORM","CREATE TRIGGER","CREATE TYPE","CREATE USER","CREATE USER MAPPING","DEALLOCATE","DECLARE","DISCARD","DROP ACCESS METHOD","DROP AGGREGATE","DROP CAST","DROP COLLATION","DROP CONVERSION","DROP DATABASE","DROP DOMAIN","DROP EVENT TRIGGER","DROP EXTENSION","DROP FOREIGN DATA WRAPPER","DROP FOREIGN TABLE","DROP FUNCTION","DROP GROUP","DROP INDEX","DROP LANGUAGE","DROP MATERIALIZED VIEW","DROP OPERATOR","DROP OPERATOR CLASS","DROP OPERATOR FAMILY","DROP OWNED","DROP POLICY","DROP PROCEDURE","DROP PUBLICATION","DROP ROLE","DROP ROUTINE","DROP RULE","DROP SCHEMA","DROP SEQUENCE","DROP SERVER","DROP STATISTICS","DROP SUBSCRIPTION","DROP TABLESPACE","DROP TEXT SEARCH CONFIGURATION","DROP TEXT SEARCH DICTIONARY","DROP TEXT SEARCH PARSER","DROP TEXT SEARCH TEMPLATE","DROP TRANSFORM","DROP TRIGGER","DROP TYPE","DROP USER","DROP USER MAPPING","DROP VIEW","EXECUTE","EXPLAIN","FETCH","GRANT","IMPORT FOREIGN SCHEMA","LISTEN","LOAD","LOCK","MOVE","NOTIFY","PREPARE","PREPARE TRANSACTION","REASSIGN OWNED","REFRESH MATERIALIZED VIEW","REINDEX","RELEASE SAVEPOINT","RESET","REVOKE","ROLLBACK","ROLLBACK PREPARED","ROLLBACK TO SAVEPOINT","SAVEPOINT","SECURITY LABEL","SELECT INTO","SET CONSTRAINTS","SET ROLE","SET SESSION AUTHORIZATION","SET TRANSACTION","SHOW","START TRANSACTION","UNLISTEN","VACUUM"]),A=(0,s.n)(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),a=(0,s.n)(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),S=(0,s.n)(["ON {UPDATE | DELETE} [SET NULL | SET DEFAULT]","{ROWS | RANGE | GROUPS} BETWEEN","{TIMESTAMP | TIME} {WITH | WITHOUT} TIME ZONE"]),N={tokenizerOptions:{reservedSelect:R,reservedClauses:[...o,...i],reservedSetOperations:A,reservedJoins:a,reservedPhrases:S,reservedKeywords:n,reservedFunctionNames:T,nestedBlockComments:!0,extraParens:["[]"],stringTypes:["$$",{quote:"''-qq",prefixes:["U&"]},{quote:"''-bs",prefixes:["E"],requirePrefix:!0},{quote:"''-raw",prefixes:["B","X"],requirePrefix:!0}],identTypes:[{quote:'""-qq',prefixes:["U&"]}],identChars:{rest:"$"},paramTypes:{numbered:["$"]},operators:["%","^","|/","||/","@",":=","&","|","#","~","<<",">>","~>~","~<~","~>=~","~<=~","@-@","@@","##","<->","&&","&<","&>","<<|","&<|","|>>","|&>","<^","^>","?#","?-","?|","?-|","?||","@>","<@","~=","?","@?","?&","->","->>","#>","#>>","#-","=>",">>=","<<=","~~","~~*","!~~","!~~*","~","~*","!~","!~*","-|-","||","@@@","!!","<%","%>","<<%","%>>","<<->","<->>","<<<->","<->>>","::"]},formatOptions:{alwaysDenseOperators:["::"],onelineClauses:i}}},43583:function(e,E,t){"use strict";t.d(E,{j:function(){return I}});var s=t(85909),r=t(42873),T=t(21629);let n=(0,T.B3)({all:["ADD","AFTER","ALL","ALTER","ANALYZE","AND","ANTI","ANY","ARCHIVE","ARRAY","AS","ASC","AT","AUTHORIZATION","BETWEEN","BOTH","BUCKET","BUCKETS","BY","CACHE","CASCADE","CAST","CHANGE","CHECK","CLEAR","CLUSTER","CLUSTERED","CODEGEN","COLLATE","COLLECTION","COLUMN","COLUMNS","COMMENT","COMMIT","COMPACT","COMPACTIONS","COMPUTE","CONCATENATE","CONSTRAINT","COST","CREATE","CROSS","CUBE","CURRENT","CURRENT_DATE","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_USER","DATA","DATABASE","DATABASES","DAY","DBPROPERTIES","DEFINED","DELETE","DELIMITED","DESC","DESCRIBE","DFS","DIRECTORIES","DIRECTORY","DISTINCT","DISTRIBUTE","DIV","DROP","ESCAPE","ESCAPED","EXCEPT","EXCHANGE","EXISTS","EXPORT","EXTENDED","EXTERNAL","EXTRACT","FALSE","FETCH","FIELDS","FILTER","FILEFORMAT","FIRST","FIRST_VALUE","FOLLOWING","FOR","FOREIGN","FORMAT","FORMATTED","FULL","FUNCTION","FUNCTIONS","GLOBAL","GRANT","GROUP","GROUPING","HOUR","IF","IGNORE","IMPORT","IN","INDEX","INDEXES","INNER","INPATH","INPUTFORMAT","INTERSECT","INTERVAL","INTO","IS","ITEMS","KEYS","LAST","LAST_VALUE","LATERAL","LAZY","LEADING","LEFT","LIKE","LINES","LIST","LOCAL","LOCATION","LOCK","LOCKS","LOGICAL","MACRO","MAP","MATCHED","MERGE","MINUTE","MONTH","MSCK","NAMESPACE","NAMESPACES","NATURAL","NO","NOT","NULL","NULLS","OF","ONLY","OPTION","OPTIONS","OR","ORDER","OUT","OUTER","OUTPUTFORMAT","OVER","OVERLAPS","OVERLAY","OVERWRITE","OWNER","PARTITION","PARTITIONED","PARTITIONS","PERCENT","PLACING","POSITION","PRECEDING","PRIMARY","PRINCIPALS","PROPERTIES","PURGE","QUERY","RANGE","RECORDREADER","RECORDWRITER","RECOVER","REDUCE","REFERENCES","RENAME","REPAIR","REPLACE","RESPECT","RESTRICT","REVOKE","RIGHT","RLIKE","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","SCHEMA","SECOND","SELECT","SEMI","SEPARATED","SERDE","SERDEPROPERTIES","SESSION_USER","SETS","SHOW","SKEWED","SOME","SORT","SORTED","START","STATISTICS","STORED","STRATIFY","STRUCT","SUBSTR","SUBSTRING","TABLE","TABLES","TBLPROPERTIES","TEMPORARY","TERMINATED","THEN","TO","TOUCH","TRAILING","TRANSACTION","TRANSACTIONS","TRIM","TRUE","TRUNCATE","UNARCHIVE","UNBOUNDED","UNCACHE","UNIQUE","UNKNOWN","UNLOCK","UNSET","USE","USER","USING","VIEW","WINDOW","YEAR","ANALYSE","ARRAY_ZIP","COALESCE","CONTAINS","CONVERT","DAYS","DAY_HOUR","DAY_MINUTE","DAY_SECOND","DECODE","DEFAULT","DISTINCTROW","ENCODE","EXPLODE","EXPLODE_OUTER","FIXED","GREATEST","GROUP_CONCAT","HOURS","HOUR_MINUTE","HOUR_SECOND","IFNULL","LEAST","LEVEL","MINUTE_SECOND","NULLIF","OFFSET","ON","OPTIMIZE","REGEXP","SEPARATOR","SIZE","STRING","TYPE","TYPES","UNSIGNED","VARIABLES","YEAR_MONTH"]}),R=(0,T.B3)({aggregate:["APPROX_COUNT_DISTINCT","APPROX_PERCENTILE","AVG","BIT_AND","BIT_OR","BIT_XOR","BOOL_AND","BOOL_OR","COLLECT_LIST","COLLECT_SET","CORR","COUNT","COUNT","COUNT","COUNT_IF","COUNT_MIN_SKETCH","COVAR_POP","COVAR_SAMP","EVERY","FIRST","FIRST_VALUE","GROUPING","GROUPING_ID","KURTOSIS","LAST","LAST_VALUE","MAX","MAX_BY","MEAN","MIN","MIN_BY","PERCENTILE","PERCENTILE","PERCENTILE_APPROX","SKEWNESS","STD","STDDEV","STDDEV_POP","STDDEV_SAMP","SUM","VAR_POP","VAR_SAMP","VARIANCE"],window:["CUME_DIST","DENSE_RANK","LAG","LEAD","NTH_VALUE","NTILE","PERCENT_RANK","RANK","ROW_NUMBER"],array:["ARRAY","ARRAY_CONTAINS","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_REPEAT","ARRAY_UNION","ARRAYS_OVERLAP","ARRAYS_ZIP","FLATTEN","SEQUENCE","SHUFFLE","SLICE","SORT_ARRAY"],map:["ELEMENT_AT","ELEMENT_AT","MAP","MAP_CONCAT","MAP_ENTRIES","MAP_FROM_ARRAYS","MAP_FROM_ENTRIES","MAP_KEYS","MAP_VALUES","STR_TO_MAP"],datetime:["ADD_MONTHS","CURRENT_DATE","CURRENT_DATE","CURRENT_TIMESTAMP","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","DATE_ADD","DATE_FORMAT","DATE_FROM_UNIX_DATE","DATE_PART","DATE_SUB","DATE_TRUNC","DATEDIFF","DAY","DAYOFMONTH","DAYOFWEEK","DAYOFYEAR","EXTRACT","FROM_UNIXTIME","FROM_UTC_TIMESTAMP","HOUR","LAST_DAY","MAKE_DATE","MAKE_DT_INTERVAL","MAKE_INTERVAL","MAKE_TIMESTAMP","MAKE_YM_INTERVAL","MINUTE","MONTH","MONTHS_BETWEEN","NEXT_DAY","NOW","QUARTER","SECOND","SESSION_WINDOW","TIMESTAMP_MICROS","TIMESTAMP_MILLIS","TIMESTAMP_SECONDS","TO_DATE","TO_TIMESTAMP","TO_UNIX_TIMESTAMP","TO_UTC_TIMESTAMP","TRUNC","UNIX_DATE","UNIX_MICROS","UNIX_MILLIS","UNIX_SECONDS","UNIX_TIMESTAMP","WEEKDAY","WEEKOFYEAR","WINDOW","YEAR"],json:["FROM_JSON","GET_JSON_OBJECT","JSON_ARRAY_LENGTH","JSON_OBJECT_KEYS","JSON_TUPLE","SCHEMA_OF_JSON","TO_JSON"],misc:["ABS","ACOS","ACOSH","AGGREGATE","ARRAY_SORT","ASCII","ASIN","ASINH","ASSERT_TRUE","ATAN","ATAN2","ATANH","BASE64","BIGINT","BIN","BINARY","BIT_COUNT","BIT_GET","BIT_LENGTH","BOOLEAN","BROUND","BTRIM","CARDINALITY","CBRT","CEIL","CEILING","CHAR","CHAR_LENGTH","CHARACTER_LENGTH","CHR","CONCAT","CONCAT_WS","CONV","COS","COSH","COT","CRC32","CURRENT_CATALOG","CURRENT_DATABASE","CURRENT_USER","DATE","DECIMAL","DEGREES","DOUBLE","ELT","EXP","EXPM1","FACTORIAL","FIND_IN_SET","FLOAT","FLOOR","FORALL","FORMAT_NUMBER","FORMAT_STRING","FROM_CSV","GETBIT","HASH","HEX","HYPOT","INITCAP","INLINE","INLINE_OUTER","INPUT_FILE_BLOCK_LENGTH","INPUT_FILE_BLOCK_START","INPUT_FILE_NAME","INSTR","INT","ISNAN","ISNOTNULL","ISNULL","JAVA_METHOD","LCASE","LEFT","LENGTH","LEVENSHTEIN","LN","LOCATE","LOG","LOG10","LOG1P","LOG2","LOWER","LPAD","LTRIM","MAP_FILTER","MAP_ZIP_WITH","MD5","MOD","MONOTONICALLY_INCREASING_ID","NAMED_STRUCT","NANVL","NEGATIVE","NVL","NVL2","OCTET_LENGTH","OVERLAY","PARSE_URL","PI","PMOD","POSEXPLODE","POSEXPLODE_OUTER","POSITION","POSITIVE","POW","POWER","PRINTF","RADIANS","RAISE_ERROR","RAND","RANDN","RANDOM","REFLECT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_REPLACE","REPEAT","REPLACE","REVERSE","RIGHT","RINT","ROUND","RPAD","RTRIM","SCHEMA_OF_CSV","SENTENCES","SHA","SHA1","SHA2","SHIFTLEFT","SHIFTRIGHT","SHIFTRIGHTUNSIGNED","SIGN","SIGNUM","SIN","SINH","SMALLINT","SOUNDEX","SPACE","SPARK_PARTITION_ID","SPLIT","SQRT","STACK","SUBSTR","SUBSTRING","SUBSTRING_INDEX","TAN","TANH","TIMESTAMP","TINYINT","TO_CSV","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRY_ADD","TRY_DIVIDE","TYPEOF","UCASE","UNBASE64","UNHEX","UPPER","UUID","VERSION","WIDTH_BUCKET","XPATH","XPATH_BOOLEAN","XPATH_DOUBLE","XPATH_FLOAT","XPATH_INT","XPATH_LONG","XPATH_NUMBER","XPATH_SHORT","XPATH_STRING","XXHASH64","ZIP_WITH"],cast:["CAST"],caseAbbrev:["COALESCE","NULLIF"],dataTypes:["DECIMAL","DEC","NUMERIC","VARCHAR"]}),o=(0,s.n)(["SELECT [ALL | DISTINCT]"]),i=(0,s.n)(["WITH","FROM","WHERE","GROUP BY","HAVING","WINDOW","PARTITION BY","ORDER BY","SORT BY","CLUSTER BY","DISTRIBUTE BY","LIMIT","INSERT [INTO | OVERWRITE] [TABLE]","VALUES","INSERT OVERWRITE [LOCAL] DIRECTORY","LOAD DATA [LOCAL] INPATH","[OVERWRITE] INTO TABLE","CREATE [OR REPLACE] [GLOBAL TEMPORARY | TEMPORARY] VIEW [IF NOT EXISTS]","CREATE [EXTERNAL] TABLE [IF NOT EXISTS]"]),A=(0,s.n)(["DROP TABLE [IF EXISTS]","ALTER TABLE","ADD COLUMNS","DROP {COLUMN | COLUMNS}","RENAME TO","RENAME COLUMN","ALTER COLUMN","TRUNCATE TABLE","LATERAL VIEW","ALTER DATABASE","ALTER VIEW","CREATE DATABASE","CREATE FUNCTION","DROP DATABASE","DROP FUNCTION","DROP VIEW","REPAIR TABLE","USE DATABASE","TABLESAMPLE","PIVOT","TRANSFORM","EXPLAIN","ADD FILE","ADD JAR","ANALYZE TABLE","CACHE TABLE","CLEAR CACHE","DESCRIBE DATABASE","DESCRIBE FUNCTION","DESCRIBE QUERY","DESCRIBE TABLE","LIST FILE","LIST JAR","REFRESH","REFRESH TABLE","REFRESH FUNCTION","RESET","SHOW COLUMNS","SHOW CREATE TABLE","SHOW DATABASES","SHOW FUNCTIONS","SHOW PARTITIONS","SHOW TABLE EXTENDED","SHOW TABLES","SHOW TBLPROPERTIES","SHOW VIEWS","UNCACHE TABLE"]),a=(0,s.n)(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),S=(0,s.n)(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN","[LEFT] {ANTI | SEMI} JOIN","NATURAL [LEFT] {ANTI | SEMI} JOIN"]),N=(0,s.n)(["ON DELETE","ON UPDATE","CURRENT ROW","{ROWS | RANGE} BETWEEN"]),I={tokenizerOptions:{reservedSelect:o,reservedClauses:[...i,...A],reservedSetOperations:a,reservedJoins:S,reservedPhrases:N,supportsXor:!0,reservedKeywords:n,reservedFunctionNames:R,extraParens:["[]"],stringTypes:["''-bs",'""-bs',{quote:"''-raw",prefixes:["R","X"],requirePrefix:!0},{quote:'""-raw',prefixes:["R","X"],requirePrefix:!0}],identTypes:["``"],variableTypes:[{quote:"{}",prefixes:["$"],requirePrefix:!0}],operators:["%","~","^","|","&","<=>","==","!","||","->"],postProcess:function(e){return e.map((E,t)=>{let s=e[t-1]||r.rP,T=e[t+1]||r.rP;return r.hD.WINDOW(E)&&T.type===r.iv.OPEN_PAREN?{...E,type:r.iv.RESERVED_FUNCTION_NAME}:"ITEMS"!==E.text||E.type!==r.iv.RESERVED_KEYWORD||"COLLECTION"===s.text&&"TERMINATED"===T.text?E:{...E,type:r.iv.IDENTIFIER,text:E.raw}})}},formatOptions:{onelineClauses:A}}},18605:function(e,E,t){"use strict";t.d(E,{h:function(){return N}});var s=t(85909),r=t(21629);let T=(0,r.B3)({all:["ABS","ACOS","ALL_MATCH","ANY_MATCH","APPROX_DISTINCT","APPROX_MOST_FREQUENT","APPROX_PERCENTILE","APPROX_SET","ARBITRARY","ARRAYS_OVERLAP","ARRAY_AGG","ARRAY_DISTINCT","ARRAY_EXCEPT","ARRAY_INTERSECT","ARRAY_JOIN","ARRAY_MAX","ARRAY_MIN","ARRAY_POSITION","ARRAY_REMOVE","ARRAY_SORT","ARRAY_UNION","ASIN","ATAN","ATAN2","AT_TIMEZONE","AVG","BAR","BETA_CDF","BING_TILE","BING_TILES_AROUND","BING_TILE_AT","BING_TILE_COORDINATES","BING_TILE_POLYGON","BING_TILE_QUADKEY","BING_TILE_ZOOM_LEVEL","BITWISE_AND","BITWISE_AND_AGG","BITWISE_LEFT_SHIFT","BITWISE_NOT","BITWISE_OR","BITWISE_OR_AGG","BITWISE_RIGHT_SHIFT","BITWISE_RIGHT_SHIFT_ARITHMETIC","BITWISE_XOR","BIT_COUNT","BOOL_AND","BOOL_OR","CARDINALITY","CAST","CBRT","CEIL","CEILING","CHAR2HEXINT","CHECKSUM","CHR","CLASSIFY","COALESCE","CODEPOINT","COLOR","COMBINATIONS","CONCAT","CONCAT_WS","CONTAINS","CONTAINS_SEQUENCE","CONVEX_HULL_AGG","CORR","COS","COSH","COSINE_SIMILARITY","COUNT","COUNT_IF","COVAR_POP","COVAR_SAMP","CRC32","CUME_DIST","CURRENT_CATALOG","CURRENT_DATE","CURRENT_GROUPS","CURRENT_SCHEMA","CURRENT_TIME","CURRENT_TIMESTAMP","CURRENT_TIMEZONE","CURRENT_USER","DATE","DATE_ADD","DATE_DIFF","DATE_FORMAT","DATE_PARSE","DATE_TRUNC","DAY","DAY_OF_MONTH","DAY_OF_WEEK","DAY_OF_YEAR","DEGREES","DENSE_RANK","DOW","DOY","E","ELEMENT_AT","EMPTY_APPROX_SET","EVALUATE_CLASSIFIER_PREDICTIONS","EVERY","EXP","EXTRACT","FEATURES","FILTER","FIRST_VALUE","FLATTEN","FLOOR","FORMAT","FORMAT_DATETIME","FORMAT_NUMBER","FROM_BASE","FROM_BASE32","FROM_BASE64","FROM_BASE64URL","FROM_BIG_ENDIAN_32","FROM_BIG_ENDIAN_64","FROM_ENCODED_POLYLINE","FROM_GEOJSON_GEOMETRY","FROM_HEX","FROM_IEEE754_32","FROM_IEEE754_64","FROM_ISO8601_DATE","FROM_ISO8601_TIMESTAMP","FROM_ISO8601_TIMESTAMP_NANOS","FROM_UNIXTIME","FROM_UNIXTIME_NANOS","FROM_UTF8","GEOMETRIC_MEAN","GEOMETRY_FROM_HADOOP_SHAPE","GEOMETRY_INVALID_REASON","GEOMETRY_NEAREST_POINTS","GEOMETRY_TO_BING_TILES","GEOMETRY_UNION","GEOMETRY_UNION_AGG","GREATEST","GREAT_CIRCLE_DISTANCE","HAMMING_DISTANCE","HASH_COUNTS","HISTOGRAM","HMAC_MD5","HMAC_SHA1","HMAC_SHA256","HMAC_SHA512","HOUR","HUMAN_READABLE_SECONDS","IF","INDEX","INFINITY","INTERSECTION_CARDINALITY","INVERSE_BETA_CDF","INVERSE_NORMAL_CDF","IS_FINITE","IS_INFINITE","IS_JSON_SCALAR","IS_NAN","JACCARD_INDEX","JSON_ARRAY_CONTAINS","JSON_ARRAY_GET","JSON_ARRAY_LENGTH","JSON_EXISTS","JSON_EXTRACT","JSON_EXTRACT_SCALAR","JSON_FORMAT","JSON_PARSE","JSON_QUERY","JSON_SIZE","JSON_VALUE","KURTOSIS","LAG","LAST_DAY_OF_MONTH","LAST_VALUE","LEAD","LEARN_CLASSIFIER","LEARN_LIBSVM_CLASSIFIER","LEARN_LIBSVM_REGRESSOR","LEARN_REGRESSOR","LEAST","LENGTH","LEVENSHTEIN_DISTANCE","LINE_INTERPOLATE_POINT","LINE_INTERPOLATE_POINTS","LINE_LOCATE_POINT","LISTAGG","LN","LOCALTIME","LOCALTIMESTAMP","LOG","LOG10","LOG2","LOWER","LPAD","LTRIM","LUHN_CHECK","MAKE_SET_DIGEST","MAP","MAP_AGG","MAP_CONCAT","MAP_ENTRIES","MAP_FILTER","MAP_FROM_ENTRIES","MAP_KEYS","MAP_UNION","MAP_VALUES","MAP_ZIP_WITH","MAX","MAX_BY","MD5","MERGE","MERGE_SET_DIGEST","MILLISECOND","MIN","MINUTE","MIN_BY","MOD","MONTH","MULTIMAP_AGG","MULTIMAP_FROM_ENTRIES","MURMUR3","NAN","NGRAMS","NONE_MATCH","NORMALIZE","NORMAL_CDF","NOW","NTH_VALUE","NTILE","NULLIF","NUMERIC_HISTOGRAM","OBJECTID","OBJECTID_TIMESTAMP","PARSE_DATA_SIZE","PARSE_DATETIME","PARSE_DURATION","PERCENT_RANK","PI","POSITION","POW","POWER","QDIGEST_AGG","QUARTER","RADIANS","RAND","RANDOM","RANK","REDUCE","REDUCE_AGG","REGEXP_COUNT","REGEXP_EXTRACT","REGEXP_EXTRACT_ALL","REGEXP_LIKE","REGEXP_POSITION","REGEXP_REPLACE","REGEXP_SPLIT","REGRESS","REGR_INTERCEPT","REGR_SLOPE","RENDER","REPEAT","REPLACE","REVERSE","RGB","ROUND","ROW_NUMBER","RPAD","RTRIM","SECOND","SEQUENCE","SHA1","SHA256","SHA512","SHUFFLE","SIGN","SIMPLIFY_GEOMETRY","SIN","SKEWNESS","SLICE","SOUNDEX","SPATIAL_PARTITIONING","SPATIAL_PARTITIONS","SPLIT","SPLIT_PART","SPLIT_TO_MAP","SPLIT_TO_MULTIMAP","SPOOKY_HASH_V2_32","SPOOKY_HASH_V2_64","SQRT","STARTS_WITH","STDDEV","STDDEV_POP","STDDEV_SAMP","STRPOS","ST_AREA","ST_ASBINARY","ST_ASTEXT","ST_BOUNDARY","ST_BUFFER","ST_CENTROID","ST_CONTAINS","ST_CONVEXHULL","ST_COORDDIM","ST_CROSSES","ST_DIFFERENCE","ST_DIMENSION","ST_DISJOINT","ST_DISTANCE","ST_ENDPOINT","ST_ENVELOPE","ST_ENVELOPEASPTS","ST_EQUALS","ST_EXTERIORRING","ST_GEOMETRIES","ST_GEOMETRYFROMTEXT","ST_GEOMETRYN","ST_GEOMETRYTYPE","ST_GEOMFROMBINARY","ST_INTERIORRINGN","ST_INTERIORRINGS","ST_INTERSECTION","ST_INTERSECTS","ST_ISCLOSED","ST_ISEMPTY","ST_ISRING","ST_ISSIMPLE","ST_ISVALID","ST_LENGTH","ST_LINEFROMTEXT","ST_LINESTRING","ST_MULTIPOINT","ST_NUMGEOMETRIES","ST_NUMINTERIORRING","ST_NUMPOINTS","ST_OVERLAPS","ST_POINT","ST_POINTN","ST_POINTS","ST_POLYGON","ST_RELATE","ST_STARTPOINT","ST_SYMDIFFERENCE","ST_TOUCHES","ST_UNION","ST_WITHIN","ST_X","ST_XMAX","ST_XMIN","ST_Y","ST_YMAX","ST_YMIN","SUBSTR","SUBSTRING","SUM","TAN","TANH","TDIGEST_AGG","TIMESTAMP_OBJECTID","TIMEZONE_HOUR","TIMEZONE_MINUTE","TO_BASE","TO_BASE32","TO_BASE64","TO_BASE64URL","TO_BIG_ENDIAN_32","TO_BIG_ENDIAN_64","TO_CHAR","TO_DATE","TO_ENCODED_POLYLINE","TO_GEOJSON_GEOMETRY","TO_GEOMETRY","TO_HEX","TO_IEEE754_32","TO_IEEE754_64","TO_ISO8601","TO_MILLISECONDS","TO_SPHERICAL_GEOGRAPHY","TO_TIMESTAMP","TO_UNIXTIME","TO_UTF8","TRANSFORM","TRANSFORM_KEYS","TRANSFORM_VALUES","TRANSLATE","TRIM","TRIM_ARRAY","TRUNCATE","TRY","TRY_CAST","TYPEOF","UPPER","URL_DECODE","URL_ENCODE","URL_EXTRACT_FRAGMENT","URL_EXTRACT_HOST","URL_EXTRACT_PARAMETER","URL_EXTRACT_PATH","URL_EXTRACT_PORT","URL_EXTRACT_PROTOCOL","URL_EXTRACT_QUERY","UUID","VALUES_AT_QUANTILES","VALUE_AT_QUANTILE","VARIANCE","VAR_POP","VAR_SAMP","VERSION","WEEK","WEEK_OF_YEAR","WIDTH_BUCKET","WILSON_INTERVAL_LOWER","WILSON_INTERVAL_UPPER","WITH_TIMEZONE","WORD_STEM","XXHASH64","YEAR","YEAR_OF_WEEK","YOW","ZIP","ZIP_WITH"],rowPattern:["CLASSIFIER","FIRST","LAST","MATCH_NUMBER","NEXT","PERMUTE","PREV"]}),n=(0,r.B3)({all:["ABSENT","ADD","ADMIN","AFTER","ALL","ALTER","ANALYZE","AND","ANY","ARRAY","AS","ASC","AT","AUTHORIZATION","BERNOULLI","BETWEEN","BOTH","BY","CALL","CASCADE","CASE","CATALOGS","COLUMN","COLUMNS","COMMENT","COMMIT","COMMITTED","CONDITIONAL","CONSTRAINT","COPARTITION","CREATE","CROSS","CUBE","CURRENT","CURRENT_PATH","CURRENT_ROLE","DATA","DEALLOCATE","DEFAULT","DEFINE","DEFINER","DELETE","DENY","DESC","DESCRIBE","DESCRIPTOR","DISTINCT","DISTRIBUTED","DOUBLE","DROP","ELSE","EMPTY","ENCODING","END","ERROR","ESCAPE","EXCEPT","EXCLUDING","EXECUTE","EXISTS","EXPLAIN","FALSE","FETCH","FINAL","FIRST","FOLLOWING","FOR","FROM","FULL","FUNCTIONS","GRANT","GRANTED","GRANTS","GRAPHVIZ","GROUP","GROUPING","GROUPS","HAVING","IGNORE","IN","INCLUDING","INITIAL","INNER","INPUT","INSERT","INTERSECT","INTERVAL","INTO","INVOKER","IO","IS","ISOLATION","JOIN","JSON","JSON_ARRAY","JSON_OBJECT","KEEP","KEY","KEYS","LAST","LATERAL","LEADING","LEFT","LEVEL","LIKE","LIMIT","LOCAL","LOGICAL","MATCH","MATCHED","MATCHES","MATCH_RECOGNIZE","MATERIALIZED","MEASURES","NATURAL","NEXT","NFC","NFD","NFKC","NFKD","NO","NONE","NOT","NULL","NULLS","OBJECT","OF","OFFSET","OMIT","ON","ONE","ONLY","OPTION","OR","ORDER","ORDINALITY","OUTER","OUTPUT","OVER","OVERFLOW","PARTITION","PARTITIONS","PASSING","PAST","PATH","PATTERN","PER","PERMUTE","PRECEDING","PRECISION","PREPARE","PRIVILEGES","PROPERTIES","PRUNE","QUOTES","RANGE","READ","RECURSIVE","REFRESH","RENAME","REPEATABLE","RESET","RESPECT","RESTRICT","RETURNING","REVOKE","RIGHT","ROLE","ROLES","ROLLBACK","ROLLUP","ROW","ROWS","RUNNING","SCALAR","SCHEMA","SCHEMAS","SECURITY","SEEK","SELECT","SERIALIZABLE","SESSION","SET","SETS","SHOW","SKIP","SOME","START","STATS","STRING","SUBSET","SYSTEM","TABLE","TABLES","TABLESAMPLE","TEXT","THEN","TIES","TIME","TIMESTAMP","TO","TRAILING","TRANSACTION","TRUE","TYPE","UESCAPE","UNBOUNDED","UNCOMMITTED","UNCONDITIONAL","UNION","UNIQUE","UNKNOWN","UNMATCHED","UNNEST","UPDATE","USE","USER","USING","UTF16","UTF32","UTF8","VALIDATE","VALUE","VALUES","VERBOSE","VIEW","WHEN","WHERE","WINDOW","WITH","WITHIN","WITHOUT","WORK","WRAPPER","WRITE","ZONE"],types:["BIGINT","INT","INTEGER","SMALLINT","TINYINT","BOOLEAN","DATE","DECIMAL","REAL","DOUBLE","HYPERLOGLOG","QDIGEST","TDIGEST","P4HYPERLOGLOG","INTERVAL","TIMESTAMP","TIME","VARBINARY","VARCHAR","CHAR","ROW","ARRAY","MAP","JSON","JSON2016","IPADDRESS","GEOMETRY","UUID","SETDIGEST","JONIREGEXP","RE2JREGEXP","LIKEPATTERN","COLOR","CODEPOINTS","FUNCTION","JSONPATH"]}),R=(0,s.n)(["SELECT [ALL | DISTINCT]"]),o=(0,s.n)(["WITH [RECURSIVE]","FROM","WHERE","GROUP BY [ALL | DISTINCT]","HAVING","WINDOW","PARTITION BY","ORDER BY","LIMIT","OFFSET","FETCH {FIRST | NEXT}","INSERT INTO","VALUES","SET","CREATE [OR REPLACE] [MATERIALIZED] VIEW","CREATE TABLE [IF NOT EXISTS]","MATCH_RECOGNIZE","MEASURES","ONE ROW PER MATCH","ALL ROWS PER MATCH","AFTER MATCH","PATTERN","SUBSET","DEFINE"]),i=(0,s.n)(["UPDATE","DELETE FROM","DROP TABLE [IF EXISTS]","ALTER TABLE [IF EXISTS]","ADD COLUMN [IF NOT EXISTS]","DROP COLUMN [IF EXISTS]","RENAME COLUMN [IF EXISTS]","RENAME TO","SET AUTHORIZATION [USER | ROLE]","SET PROPERTIES","EXECUTE","TRUNCATE TABLE","ALTER SCHEMA","ALTER MATERIALIZED VIEW","ALTER VIEW","CREATE SCHEMA","CREATE ROLE","DROP SCHEMA","DROP MATERIALIZED VIEW","DROP VIEW","DROP ROLE","EXPLAIN","ANALYZE","EXPLAIN ANALYZE","EXPLAIN ANALYZE VERBOSE","USE","COMMENT ON TABLE","COMMENT ON COLUMN","DESCRIBE INPUT","DESCRIBE OUTPUT","REFRESH MATERIALIZED VIEW","RESET SESSION","SET SESSION","SET PATH","SET TIME ZONE","SHOW GRANTS","SHOW CREATE TABLE","SHOW CREATE SCHEMA","SHOW CREATE VIEW","SHOW CREATE MATERIALIZED VIEW","SHOW TABLES","SHOW SCHEMAS","SHOW CATALOGS","SHOW COLUMNS","SHOW STATS FOR","SHOW ROLES","SHOW CURRENT ROLES","SHOW ROLE GRANTS","SHOW FUNCTIONS","SHOW SESSION"]),A=(0,s.n)(["UNION [ALL | DISTINCT]","EXCEPT [ALL | DISTINCT]","INTERSECT [ALL | DISTINCT]"]),a=(0,s.n)(["JOIN","{LEFT | RIGHT | FULL} [OUTER] JOIN","{INNER | CROSS} JOIN","NATURAL [INNER] JOIN","NATURAL {LEFT | RIGHT | FULL} [OUTER] JOIN"]),S=(0,s.n)(["{ROWS | RANGE | GROUPS} BETWEEN"]),N={tokenizerOptions:{reservedSelect:R,reservedClauses:[...o,...i],reservedSetOperations:A,reservedJoins:a,reservedPhrases:S,reservedKeywords:n,reservedFunctionNames:T,extraParens:["[]","{}"],stringTypes:[{quote:"''-qq",prefixes:["U&"]},{quote:"''-raw",prefixes:["X"],requirePrefix:!0}],identTypes:['""-qq'],paramTypes:{positional:!0},operators:["%","->","=>",":","||","|","^","$"]},formatOptions:{onelineClauses:i}}},42873:function(e,E,t){"use strict";var s;let r;t.d(E,{Ij:function(){return A},JU:function(){return T},hD:function(){return o},iv:function(){return r},rP:function(){return n},sU:function(){return i}}),(s=r||(r={})).QUOTED_IDENTIFIER="QUOTED_IDENTIFIER",s.IDENTIFIER="IDENTIFIER",s.STRING="STRING",s.VARIABLE="VARIABLE",s.RESERVED_KEYWORD="RESERVED_KEYWORD",s.RESERVED_FUNCTION_NAME="RESERVED_FUNCTION_NAME",s.RESERVED_PHRASE="RESERVED_PHRASE",s.RESERVED_SET_OPERATION="RESERVED_SET_OPERATION",s.RESERVED_CLAUSE="RESERVED_CLAUSE",s.RESERVED_SELECT="RESERVED_SELECT",s.RESERVED_JOIN="RESERVED_JOIN",s.ARRAY_IDENTIFIER="ARRAY_IDENTIFIER",s.ARRAY_KEYWORD="ARRAY_KEYWORD",s.CASE="CASE",s.END="END",s.WHEN="WHEN",s.ELSE="ELSE",s.THEN="THEN",s.LIMIT="LIMIT",s.BETWEEN="BETWEEN",s.AND="AND",s.OR="OR",s.XOR="XOR",s.OPERATOR="OPERATOR",s.COMMA="COMMA",s.ASTERISK="ASTERISK",s.DOT="DOT",s.OPEN_PAREN="OPEN_PAREN",s.CLOSE_PAREN="CLOSE_PAREN",s.LINE_COMMENT="LINE_COMMENT",s.BLOCK_COMMENT="BLOCK_COMMENT",s.NUMBER="NUMBER",s.NAMED_PARAMETER="NAMED_PARAMETER",s.QUOTED_PARAMETER="QUOTED_PARAMETER",s.NUMBERED_PARAMETER="NUMBERED_PARAMETER",s.POSITIONAL_PARAMETER="POSITIONAL_PARAMETER",s.DELIMITER="DELIMITER",s.EOF="EOF";let T=e=>({type:r.EOF,raw:"\xabEOF\xbb",text:"\xabEOF\xbb",start:e}),n=T(1/0),R=e=>E=>E.type===e.type&&E.text===e.text,o={ARRAY:R({text:"ARRAY",type:r.RESERVED_KEYWORD}),BY:R({text:"BY",type:r.RESERVED_KEYWORD}),SET:R({text:"SET",type:r.RESERVED_CLAUSE}),STRUCT:R({text:"STRUCT",type:r.RESERVED_KEYWORD}),WINDOW:R({text:"WINDOW",type:r.RESERVED_CLAUSE})},i=e=>e===r.RESERVED_KEYWORD||e===r.RESERVED_FUNCTION_NAME||e===r.RESERVED_PHRASE||e===r.RESERVED_CLAUSE||e===r.RESERVED_SELECT||e===r.RESERVED_SET_OPERATION||e===r.RESERVED_JOIN||e===r.ARRAY_KEYWORD||e===r.CASE||e===r.END||e===r.WHEN||e===r.ELSE||e===r.THEN||e===r.LIMIT||e===r.BETWEEN||e===r.AND||e===r.OR||e===r.XOR,A=e=>e===r.AND||e===r.OR||e===r.XOR},50124:function(e,E,t){"use strict";let s,r;t.d(E,{w4:function(){return eu}});var T,n,R=t(42873),o=t(21629);let i=e=>e.replace(/[.*+?^${}()|[\]\\]/gu,"\\$&"),A=/\s+/uy,a=e=>RegExp(`(?:${e})`,"uy"),S=e=>e.split("").map(e=>/ /gu.test(e)?"\\s+":`[${e.toUpperCase()}${e.toLowerCase()}]`).join(""),N=e=>e+"(?:-"+e+")*",I=({prefixes:e,requirePrefix:E})=>`(?:${e.map(S).join("|")}${E?"":"|"})`,_=e=>RegExp(`(?:${e.map(i).join("|")}).*?(?=\r
|\r|
|$)`,"uy"),O=(e,E=[])=>{let t="open"===e?0:1,s=["()",...E].map(e=>e[t]);return a(s.map(i).join("|"))},l=e=>a(`${(0,o.FW)(e).map(i).join("|")}`),L=({rest:e,dashes:E})=>e||E?`(?![${e||""}${E?"-":""}])`:"",C=(e,E={})=>{if(0===e.length)return/^\b$/u;let t=L(E),s=(0,o.FW)(e).map(i).join("|").replace(/ /gu,"\\s+");return RegExp(`(?:${s})${t}\\b`,"iuy")},c=(e,E)=>{if(!e.length)return;let t=e.map(i).join("|");return a(`(?:${t})(?:${E})`)},u={"``":"(?:`[^`]*`)+","[]":String.raw`(?:\[[^\]]*\])(?:\][^\]]*\])*`,'""-qq':String.raw`(?:"[^"]*")+`,'""-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")`,'""-qq-bs':String.raw`(?:"[^"\\]*(?:\\.[^"\\]*)*")+`,'""-raw':String.raw`(?:"[^"]*")`,"''-qq":String.raw`(?:'[^']*')+`,"''-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')`,"''-qq-bs":String.raw`(?:'[^'\\]*(?:\\.[^'\\]*)*')+`,"''-raw":String.raw`(?:'[^']*')`,$$:String.raw`(?<tag>\$\w*\$)[\s\S]*?\k<tag>`,"'''..'''":String.raw`'''[^\\]*?(?:\\.[^\\]*?)*?'''`,'""".."""':String.raw`"""[^\\]*?(?:\\.[^\\]*?)*?"""`,"{}":String.raw`(?:\{[^\}]*\})`,"q''":(()=>{let e={"<":">","[":"]","(":")","{":"}"},E=Object.entries(e).map(([e,E])=>"{left}(?:(?!{right}').)*?{right}".replace(/{left}/g,i(e)).replace(/{right}/g,i(E))),t=i(Object.keys(e).join("")),s=String.raw`(?<tag>[^\s${t}])(?:(?!\k<tag>').)*?\k<tag>`,r=`[Qq]'(?:${s}|${E.join("|")})'`;return r})()},p=e=>"string"==typeof e?u[e]:"regex"in e?e.regex:I(e)+u[e.quote],P=e=>a(e.map(e=>"regex"in e?e.regex:p(e)).join("|")),D=e=>e.map(p).join("|"),m=e=>a(D(e)),h=(e={})=>a(M(e)),M=({first:e,rest:E,dashes:t,allowFirstCharNumber:s}={})=>{let r="\\p{Alphabetic}\\p{Mark}_",T="\\p{Decimal_Number}",n=i(e??""),R=i(E??""),o=s?`[${r}${T}${n}][${r}${T}${R}]*`:`[${r}${n}][${r}${T}${R}]*`;return t?N(o):o};function f(e,E){let t=e.slice(0,E).split(/\n/);return{line:t.length,col:t[t.length-1].length+1}}class d{input="";index=0;constructor(e){this.rules=e}tokenize(e){let E;this.input=e,this.index=0;let t=[];for(;this.index<this.input.length;){let e=this.getWhitespace();if(this.index<this.input.length){if(!(E=this.getNextToken()))throw this.createParseError();t.push({...E,precedingWhitespace:e})}}return t}createParseError(){let e=this.input.slice(this.index,this.index+10),{line:E,col:t}=f(this.input,this.index);return Error(`Parse error: Unexpected "${e}" at line ${E} column ${t}`)}getWhitespace(){A.lastIndex=this.index;let e=A.exec(this.input);if(e)return this.index+=e[0].length,e[0]}getNextToken(){for(let e of this.rules){let E=this.match(e);if(E)return E}}match(e){e.regex.lastIndex=this.index;let E=e.regex.exec(this.input);if(E){let t=E[0],s={type:e.type,raw:t,text:e.text?e.text(t):t,start:this.index};return e.key&&(s.key=e.key(t)),this.index+=t.length,s}}}let y=/\/\*/uy,U=/([^/*]|\*[^/]|\/[^*])+/uy,G=/\*\//uy;class x{lastIndex=0;exec(e){let E,t="",s=0;if(!(E=this.matchSection(y,e)))return null;for(t+=E,s++;s>0;)if(E=this.matchSection(y,e))t+=E,s++;else if(E=this.matchSection(G,e))t+=E,s--;else{if(!(E=this.matchSection(U,e)))return null;t+=E}return[t]}matchSection(e,E){e.lastIndex=this.lastIndex;let t=e.exec(E);return t&&(this.lastIndex+=t[0].length),t?t[0]:null}}class b{constructor(e){this.cfg=e,this.rulesBeforeParams=this.buildRulesBeforeParams(e),this.rulesAfterParams=this.buildRulesAfterParams(e)}tokenize(e,E){let t=[...this.rulesBeforeParams,...this.buildParamRules(this.cfg,E),...this.rulesAfterParams],s=new d(t).tokenize(e);return this.cfg.postProcess?this.cfg.postProcess(s):s}buildRulesBeforeParams(e){return this.validRules([{type:R.iv.BLOCK_COMMENT,regex:e.nestedBlockComments?new x:/(\/\*[^]*?\*\/)/uy},{type:R.iv.LINE_COMMENT,regex:_(e.lineCommentTypes??["--"])},{type:R.iv.QUOTED_IDENTIFIER,regex:m(e.identTypes)},{type:R.iv.NUMBER,regex:/(?:0x[0-9a-fA-F]+|0b[01]+|(?:-\s*)?[0-9]+(?:\.[0-9]*)?(?:[eE][-+]?[0-9]+(?:\.[0-9]+)?)?)(?!\w)/uy},{type:R.iv.RESERVED_PHRASE,regex:C(e.reservedPhrases??[],e.identChars),text:B},{type:R.iv.CASE,regex:/CASE\b/iuy,text:B},{type:R.iv.END,regex:/END\b/iuy,text:B},{type:R.iv.BETWEEN,regex:/BETWEEN\b/iuy,text:B},{type:R.iv.LIMIT,regex:e.reservedClauses.includes("LIMIT")?/LIMIT\b/iuy:void 0,text:B},{type:R.iv.RESERVED_CLAUSE,regex:C(e.reservedClauses,e.identChars),text:B},{type:R.iv.RESERVED_SELECT,regex:C(e.reservedSelect,e.identChars),text:B},{type:R.iv.RESERVED_SET_OPERATION,regex:C(e.reservedSetOperations,e.identChars),text:B},{type:R.iv.WHEN,regex:/WHEN\b/iuy,text:B},{type:R.iv.ELSE,regex:/ELSE\b/iuy,text:B},{type:R.iv.THEN,regex:/THEN\b/iuy,text:B},{type:R.iv.RESERVED_JOIN,regex:C(e.reservedJoins,e.identChars),text:B},{type:R.iv.AND,regex:/AND\b/iuy,text:B},{type:R.iv.OR,regex:/OR\b/iuy,text:B},{type:R.iv.XOR,regex:e.supportsXor?/XOR\b/iuy:void 0,text:B},{type:R.iv.RESERVED_FUNCTION_NAME,regex:C(e.reservedFunctionNames,e.identChars),text:B},{type:R.iv.RESERVED_KEYWORD,regex:C(e.reservedKeywords,e.identChars),text:B}])}buildRulesAfterParams(e){return this.validRules([{type:R.iv.VARIABLE,regex:e.variableTypes?P(e.variableTypes):void 0},{type:R.iv.STRING,regex:m(e.stringTypes)},{type:R.iv.IDENTIFIER,regex:h(e.identChars)},{type:R.iv.DELIMITER,regex:/[;]/uy},{type:R.iv.COMMA,regex:/[,]/y},{type:R.iv.OPEN_PAREN,regex:O("open",e.extraParens)},{type:R.iv.CLOSE_PAREN,regex:O("close",e.extraParens)},{type:R.iv.OPERATOR,regex:l(["+","-","/",">","<","=","<>","<=",">=","!=",...e.operators??[]])},{type:R.iv.ASTERISK,regex:/[*]/uy},{type:R.iv.DOT,regex:/[.]/uy}])}buildParamRules(e,E){var t,s,r,T;let n={named:(null==E?void 0:E.named)||(null===(t=e.paramTypes)||void 0===t?void 0:t.named)||[],quoted:(null==E?void 0:E.quoted)||(null===(s=e.paramTypes)||void 0===s?void 0:s.quoted)||[],numbered:(null==E?void 0:E.numbered)||(null===(r=e.paramTypes)||void 0===r?void 0:r.numbered)||[],positional:"boolean"==typeof(null==E?void 0:E.positional)?E.positional:null===(T=e.paramTypes)||void 0===T?void 0:T.positional};return this.validRules([{type:R.iv.NAMED_PARAMETER,regex:c(n.named,M(e.paramChars||e.identChars)),key:e=>e.slice(1)},{type:R.iv.QUOTED_PARAMETER,regex:c(n.quoted,D(e.identTypes)),key:e=>(({tokenKey:e,quoteChar:E})=>e.replace(RegExp(i("\\"+E),"gu"),E))({tokenKey:e.slice(2,-1),quoteChar:e.slice(-1)})},{type:R.iv.NUMBERED_PARAMETER,regex:c(n.numbered,"[0-9]+"),key:e=>e.slice(1)},{type:R.iv.POSITIONAL_PARAMETER,regex:n.positional?/[?]/y:void 0}])}validRules(e){return e.filter(e=>!!e.regex)}}let B=e=>(0,o.iw)(e.toUpperCase()),H=new Map,F=e=>{let E=H.get(e);return E||(E=Y(e),H.set(e,E)),E},Y=e=>({tokenizer:new b(e.tokenizerOptions),formatOptions:W(e.formatOptions)}),W=e=>({alwaysDenseOperators:e.alwaysDenseOperators||[],onelineClauses:Object.fromEntries(e.onelineClauses.map(e=>[e,!0]))});function g(e){return"tabularLeft"===e.indentStyle||"tabularRight"===e.indentStyle?" ".repeat(10):e.useTabs?"	":" ".repeat(e.tabWidth)}function k(e){return"tabularLeft"===e.indentStyle||"tabularRight"===e.indentStyle}class V{constructor(e){this.params=e,this.index=0}get({key:e,text:E}){return this.params?e?this.params[e]:this.params[this.index++]:E}getPositionalParameterIndex(){return this.index}setPositionalParameterIndex(e){this.index=e}}var $=t(69654);let X=(e,E,t)=>{if((0,R.sU)(e.type)){let s=J(t,E);if(s&&"."===s.text)return{...e,type:R.iv.IDENTIFIER,text:e.raw}}return e},w=(e,E,t)=>{if(e.type===R.iv.RESERVED_FUNCTION_NAME){let s=j(t,E);if(!s||!Z(s))return{...e,type:R.iv.RESERVED_KEYWORD}}return e},v=(e,E,t)=>{if(e.type===R.iv.IDENTIFIER){let s=j(t,E);if(s&&q(s))return{...e,type:R.iv.ARRAY_IDENTIFIER}}return e},K=(e,E,t)=>{if(e.type===R.iv.RESERVED_KEYWORD){let s=j(t,E);if(s&&q(s))return{...e,type:R.iv.ARRAY_KEYWORD}}return e},J=(e,E)=>j(e,E,-1),j=(e,E,t=1)=>{let s=1;for(;e[E+s*t]&&Q(e[E+s*t]);)s++;return e[E+s*t]},Z=e=>e.type===R.iv.OPEN_PAREN&&"("===e.text,q=e=>e.type===R.iv.OPEN_PAREN&&"["===e.text,Q=e=>e.type===R.iv.BLOCK_COMMENT||e.type===R.iv.LINE_COMMENT;class z{index=0;tokens=[];input="";constructor(e){this.tokenize=e}reset(e,E){this.input=e,this.index=0,this.tokens=this.tokenize(e)}next(){return this.tokens[this.index++]}save(){}formatError(e){let{line:E,col:t}=f(this.input,e.start);return`Parse error at token: ${e.text} at line ${E} column ${t}`}has(e){return e in R.iv}}function ee(e){return e[0]}(T=s||(s={})).statement="statement",T.clause="clause",T.set_operation="set_operation",T.function_call="function_call",T.array_subscript="array_subscript",T.property_access="property_access",T.parenthesis="parenthesis",T.between_predicate="between_predicate",T.case_expression="case_expression",T.case_when="case_when",T.case_else="case_else",T.limit_clause="limit_clause",T.all_columns_asterisk="all_columns_asterisk",T.literal="literal",T.identifier="identifier",T.keyword="keyword",T.parameter="parameter",T.operator="operator",T.comma="comma",T.line_comment="line_comment",T.block_comment="block_comment";let eE=new z(e=>[]),et=([[e]])=>e,es=e=>({type:s.keyword,tokenType:e.type,text:e.text,raw:e.raw}),er=(e,{leading:E,trailing:t})=>(null!=E&&E.length&&(e={...e,leadingComments:E}),null!=t&&t.length&&(e={...e,trailingComments:t}),e),eT=(e,{leading:E,trailing:t})=>{if(null!=E&&E.length){let[t,...s]=e;e=[er(t,{leading:E}),...s]}if(null!=t&&t.length){let E=e.slice(0,-1),s=e[e.length-1];e=[...E,er(s,{trailing:t})]}return e},en={Lexer:eE,ParserRules:[{name:"main$ebnf$1",symbols:[]},{name:"main$ebnf$1",symbols:["main$ebnf$1","statement"],postprocess:e=>e[0].concat([e[1]])},{name:"main",symbols:["main$ebnf$1"],postprocess:([e])=>{let E=e[e.length-1];return E&&!E.hasSemicolon?E.children.length>0?e:e.slice(0,-1):e}},{name:"statement$subexpression$1",symbols:[eE.has("DELIMITER")?{type:"DELIMITER"}:DELIMITER]},{name:"statement$subexpression$1",symbols:[eE.has("EOF")?{type:"EOF"}:EOF]},{name:"statement",symbols:["expressions_or_clauses","statement$subexpression$1"],postprocess:([e,[E]])=>({type:s.statement,children:e,hasSemicolon:E.type===R.iv.DELIMITER})},{name:"expressions_or_clauses$ebnf$1",symbols:[]},{name:"expressions_or_clauses$ebnf$1",symbols:["expressions_or_clauses$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses$ebnf$2",symbols:[]},{name:"expressions_or_clauses$ebnf$2",symbols:["expressions_or_clauses$ebnf$2","clause"],postprocess:e=>e[0].concat([e[1]])},{name:"expressions_or_clauses",symbols:["expressions_or_clauses$ebnf$1","expressions_or_clauses$ebnf$2"],postprocess:([e,E])=>[...e,...E]},{name:"clause$subexpression$1",symbols:["limit_clause"]},{name:"clause$subexpression$1",symbols:["select_clause"]},{name:"clause$subexpression$1",symbols:["other_clause"]},{name:"clause$subexpression$1",symbols:["set_operation"]},{name:"clause",symbols:["clause$subexpression$1"],postprocess:et},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["free_form_sql"]},{name:"limit_clause$ebnf$1$subexpression$1$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"limit_clause$ebnf$1$subexpression$1",symbols:[eE.has("COMMA")?{type:"COMMA"}:COMMA,"limit_clause$ebnf$1$subexpression$1$ebnf$1"]},{name:"limit_clause$ebnf$1",symbols:["limit_clause$ebnf$1$subexpression$1"],postprocess:ee},{name:"limit_clause$ebnf$1",symbols:[],postprocess:()=>null},{name:"limit_clause",symbols:[eE.has("LIMIT")?{type:"LIMIT"}:LIMIT,"_","expression_chain_","limit_clause$ebnf$1"],postprocess:([e,E,t,r])=>{if(!r)return{type:s.limit_clause,limitKw:er(es(e),{trailing:E}),count:t};{let[T,n]=r;return{type:s.limit_clause,limitKw:er(es(e),{trailing:E}),offset:t,count:n}}}},{name:"select_clause$subexpression$1$ebnf$1",symbols:[]},{name:"select_clause$subexpression$1$ebnf$1",symbols:["select_clause$subexpression$1$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["all_columns_asterisk","select_clause$subexpression$1$ebnf$1"]},{name:"select_clause$subexpression$1$ebnf$2",symbols:[]},{name:"select_clause$subexpression$1$ebnf$2",symbols:["select_clause$subexpression$1$ebnf$2","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"select_clause$subexpression$1",symbols:["asteriskless_free_form_sql","select_clause$subexpression$1$ebnf$2"]},{name:"select_clause",symbols:[eE.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT,"select_clause$subexpression$1"],postprocess:([e,[E,t]])=>({type:s.clause,nameKw:es(e),children:[E,...t]})},{name:"select_clause",symbols:[eE.has("RESERVED_SELECT")?{type:"RESERVED_SELECT"}:RESERVED_SELECT],postprocess:([e])=>({type:s.clause,nameKw:es(e),children:[]})},{name:"all_columns_asterisk",symbols:[eE.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK],postprocess:()=>({type:s.all_columns_asterisk})},{name:"other_clause$ebnf$1",symbols:[]},{name:"other_clause$ebnf$1",symbols:["other_clause$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"other_clause",symbols:[eE.has("RESERVED_CLAUSE")?{type:"RESERVED_CLAUSE"}:RESERVED_CLAUSE,"other_clause$ebnf$1"],postprocess:([e,E])=>({type:s.clause,nameKw:es(e),children:E})},{name:"set_operation$ebnf$1",symbols:[]},{name:"set_operation$ebnf$1",symbols:["set_operation$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"set_operation",symbols:[eE.has("RESERVED_SET_OPERATION")?{type:"RESERVED_SET_OPERATION"}:RESERVED_SET_OPERATION,"set_operation$ebnf$1"],postprocess:([e,E])=>({type:s.set_operation,nameKw:es(e),children:E})},{name:"expression_chain_$ebnf$1",symbols:["expression_with_comments_"]},{name:"expression_chain_$ebnf$1",symbols:["expression_chain_$ebnf$1","expression_with_comments_"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain_",symbols:["expression_chain_$ebnf$1"],postprocess:ee},{name:"expression_chain$ebnf$1",symbols:[]},{name:"expression_chain$ebnf$1",symbols:["expression_chain$ebnf$1","_expression_with_comments"],postprocess:e=>e[0].concat([e[1]])},{name:"expression_chain",symbols:["expression","expression_chain$ebnf$1"],postprocess:([e,E])=>[e,...E]},{name:"expression_with_comments_",symbols:["expression","_"],postprocess:([e,E])=>er(e,{trailing:E})},{name:"_expression_with_comments",symbols:["_","expression"],postprocess:([e,E])=>er(E,{leading:e})},{name:"free_form_sql$subexpression$1",symbols:["asteriskless_free_form_sql"]},{name:"free_form_sql$subexpression$1",symbols:["asterisk"]},{name:"free_form_sql",symbols:["free_form_sql$subexpression$1"],postprocess:et},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["asteriskless_expression"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["between_predicate"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comma"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["comment"]},{name:"asteriskless_free_form_sql$subexpression$1",symbols:["other_keyword"]},{name:"asteriskless_free_form_sql",symbols:["asteriskless_free_form_sql$subexpression$1"],postprocess:et},{name:"expression$subexpression$1",symbols:["asteriskless_expression"]},{name:"expression$subexpression$1",symbols:["asterisk"]},{name:"expression",symbols:["expression$subexpression$1"],postprocess:et},{name:"asteriskless_expression$subexpression$1",symbols:["array_subscript"]},{name:"asteriskless_expression$subexpression$1",symbols:["case_expression"]},{name:"asteriskless_expression$subexpression$1",symbols:["function_call"]},{name:"asteriskless_expression$subexpression$1",symbols:["property_access"]},{name:"asteriskless_expression$subexpression$1",symbols:["parenthesis"]},{name:"asteriskless_expression$subexpression$1",symbols:["curly_braces"]},{name:"asteriskless_expression$subexpression$1",symbols:["square_brackets"]},{name:"asteriskless_expression$subexpression$1",symbols:["operator"]},{name:"asteriskless_expression$subexpression$1",symbols:["identifier"]},{name:"asteriskless_expression$subexpression$1",symbols:["parameter"]},{name:"asteriskless_expression$subexpression$1",symbols:["literal"]},{name:"asteriskless_expression$subexpression$1",symbols:["keyword"]},{name:"asteriskless_expression",symbols:["asteriskless_expression$subexpression$1"],postprocess:et},{name:"array_subscript",symbols:[eE.has("ARRAY_IDENTIFIER")?{type:"ARRAY_IDENTIFIER"}:ARRAY_IDENTIFIER,"_","square_brackets"],postprocess:([e,E,t])=>({type:s.array_subscript,array:er({type:s.identifier,text:e.text},{trailing:E}),parenthesis:t})},{name:"array_subscript",symbols:[eE.has("ARRAY_KEYWORD")?{type:"ARRAY_KEYWORD"}:ARRAY_KEYWORD,"_","square_brackets"],postprocess:([e,E,t])=>({type:s.array_subscript,array:er(es(e),{trailing:E}),parenthesis:t})},{name:"function_call",symbols:[eE.has("RESERVED_FUNCTION_NAME")?{type:"RESERVED_FUNCTION_NAME"}:RESERVED_FUNCTION_NAME,"_","parenthesis"],postprocess:([e,E,t])=>({type:s.function_call,nameKw:er(es(e),{trailing:E}),parenthesis:t})},{name:"parenthesis",symbols:[{literal:"("},"expressions_or_clauses",{literal:")"}],postprocess:([e,E,t])=>({type:s.parenthesis,children:E,openParen:"(",closeParen:")"})},{name:"curly_braces$ebnf$1",symbols:[]},{name:"curly_braces$ebnf$1",symbols:["curly_braces$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"curly_braces",symbols:[{literal:"{"},"curly_braces$ebnf$1",{literal:"}"}],postprocess:([e,E,t])=>({type:s.parenthesis,children:E,openParen:"{",closeParen:"}"})},{name:"square_brackets$ebnf$1",symbols:[]},{name:"square_brackets$ebnf$1",symbols:["square_brackets$ebnf$1","free_form_sql"],postprocess:e=>e[0].concat([e[1]])},{name:"square_brackets",symbols:[{literal:"["},"square_brackets$ebnf$1",{literal:"]"}],postprocess:([e,E,t])=>({type:s.parenthesis,children:E,openParen:"[",closeParen:"]"})},{name:"property_access$subexpression$1",symbols:["identifier"]},{name:"property_access$subexpression$1",symbols:["array_subscript"]},{name:"property_access$subexpression$1",symbols:["all_columns_asterisk"]},{name:"property_access",symbols:["expression","_",eE.has("DOT")?{type:"DOT"}:DOT,"_","property_access$subexpression$1"],postprocess:([e,E,t,r,[T]])=>({type:s.property_access,object:er(e,{trailing:E}),property:er(T,{leading:r})})},{name:"between_predicate",symbols:[eE.has("BETWEEN")?{type:"BETWEEN"}:BETWEEN,"_","expression_chain","_",eE.has("AND")?{type:"AND"}:AND,"_","expression"],postprocess:([e,E,t,r,T,n,R])=>({type:s.between_predicate,betweenKw:es(e),expr1:eT(t,{leading:E,trailing:r}),andKw:es(T),expr2:[er(R,{leading:n})]})},{name:"case_expression$ebnf$1",symbols:["expression_chain_"],postprocess:ee},{name:"case_expression$ebnf$1",symbols:[],postprocess:()=>null},{name:"case_expression$ebnf$2",symbols:[]},{name:"case_expression$ebnf$2",symbols:["case_expression$ebnf$2","case_clause"],postprocess:e=>e[0].concat([e[1]])},{name:"case_expression",symbols:[eE.has("CASE")?{type:"CASE"}:CASE,"_","case_expression$ebnf$1","case_expression$ebnf$2",eE.has("END")?{type:"END"}:END],postprocess:([e,E,t,r,T])=>({type:s.case_expression,caseKw:er(es(e),{trailing:E}),endKw:es(T),expr:t||[],clauses:r})},{name:"case_clause",symbols:[eE.has("WHEN")?{type:"WHEN"}:WHEN,"_","expression_chain_",eE.has("THEN")?{type:"THEN"}:THEN,"_","expression_chain_"],postprocess:([e,E,t,r,T,n])=>({type:s.case_when,whenKw:er(es(e),{trailing:E}),thenKw:er(es(r),{trailing:T}),condition:t,result:n})},{name:"case_clause",symbols:[eE.has("ELSE")?{type:"ELSE"}:ELSE,"_","expression_chain_"],postprocess:([e,E,t])=>({type:s.case_else,elseKw:er(es(e),{trailing:E}),result:t})},{name:"comma$subexpression$1",symbols:[eE.has("COMMA")?{type:"COMMA"}:COMMA]},{name:"comma",symbols:["comma$subexpression$1"],postprocess:([[e]])=>({type:s.comma})},{name:"asterisk$subexpression$1",symbols:[eE.has("ASTERISK")?{type:"ASTERISK"}:ASTERISK]},{name:"asterisk",symbols:["asterisk$subexpression$1"],postprocess:([[e]])=>({type:s.operator,text:e.text})},{name:"operator$subexpression$1",symbols:[eE.has("OPERATOR")?{type:"OPERATOR"}:OPERATOR]},{name:"operator",symbols:["operator$subexpression$1"],postprocess:([[e]])=>({type:s.operator,text:e.text})},{name:"identifier$subexpression$1",symbols:[eE.has("IDENTIFIER")?{type:"IDENTIFIER"}:IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[eE.has("QUOTED_IDENTIFIER")?{type:"QUOTED_IDENTIFIER"}:QUOTED_IDENTIFIER]},{name:"identifier$subexpression$1",symbols:[eE.has("VARIABLE")?{type:"VARIABLE"}:VARIABLE]},{name:"identifier",symbols:["identifier$subexpression$1"],postprocess:([[e]])=>({type:s.identifier,text:e.text})},{name:"parameter$subexpression$1",symbols:[eE.has("NAMED_PARAMETER")?{type:"NAMED_PARAMETER"}:NAMED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[eE.has("QUOTED_PARAMETER")?{type:"QUOTED_PARAMETER"}:QUOTED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[eE.has("NUMBERED_PARAMETER")?{type:"NUMBERED_PARAMETER"}:NUMBERED_PARAMETER]},{name:"parameter$subexpression$1",symbols:[eE.has("POSITIONAL_PARAMETER")?{type:"POSITIONAL_PARAMETER"}:POSITIONAL_PARAMETER]},{name:"parameter",symbols:["parameter$subexpression$1"],postprocess:([[e]])=>({type:s.parameter,key:e.key,text:e.text})},{name:"literal$subexpression$1",symbols:[eE.has("NUMBER")?{type:"NUMBER"}:NUMBER]},{name:"literal$subexpression$1",symbols:[eE.has("STRING")?{type:"STRING"}:STRING]},{name:"literal",symbols:["literal$subexpression$1"],postprocess:([[e]])=>({type:s.literal,text:e.text})},{name:"keyword$subexpression$1",symbols:[eE.has("RESERVED_KEYWORD")?{type:"RESERVED_KEYWORD"}:RESERVED_KEYWORD]},{name:"keyword$subexpression$1",symbols:[eE.has("RESERVED_PHRASE")?{type:"RESERVED_PHRASE"}:RESERVED_PHRASE]},{name:"keyword$subexpression$1",symbols:[eE.has("RESERVED_JOIN")?{type:"RESERVED_JOIN"}:RESERVED_JOIN]},{name:"keyword$subexpression$1",symbols:[eE.has("AND")?{type:"AND"}:AND]},{name:"keyword$subexpression$1",symbols:[eE.has("OR")?{type:"OR"}:OR]},{name:"keyword$subexpression$1",symbols:[eE.has("XOR")?{type:"XOR"}:XOR]},{name:"keyword",symbols:["keyword$subexpression$1"],postprocess:([[e]])=>es(e)},{name:"other_keyword$subexpression$1",symbols:[eE.has("WHEN")?{type:"WHEN"}:WHEN]},{name:"other_keyword$subexpression$1",symbols:[eE.has("THEN")?{type:"THEN"}:THEN]},{name:"other_keyword$subexpression$1",symbols:[eE.has("ELSE")?{type:"ELSE"}:ELSE]},{name:"other_keyword$subexpression$1",symbols:[eE.has("END")?{type:"END"}:END]},{name:"other_keyword",symbols:["other_keyword$subexpression$1"],postprocess:([[e]])=>es(e)},{name:"_$ebnf$1",symbols:[]},{name:"_$ebnf$1",symbols:["_$ebnf$1","comment"],postprocess:e=>e[0].concat([e[1]])},{name:"_",symbols:["_$ebnf$1"],postprocess:([e])=>e},{name:"comment",symbols:[eE.has("LINE_COMMENT")?{type:"LINE_COMMENT"}:LINE_COMMENT],postprocess:([e])=>({type:s.line_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})},{name:"comment",symbols:[eE.has("BLOCK_COMMENT")?{type:"BLOCK_COMMENT"}:BLOCK_COMMENT],postprocess:([e])=>({type:s.block_comment,text:e.text,precedingWhitespace:e.precedingWhitespace})}],ParserStart:"main"},{Parser:eR,Grammar:eo}=$,ei=/^\s+/u;(n=r||(r={}))[n.SPACE=0]="SPACE",n[n.NO_SPACE=1]="NO_SPACE",n[n.NO_NEWLINE=2]="NO_NEWLINE",n[n.NEWLINE=3]="NEWLINE",n[n.MANDATORY_NEWLINE=4]="MANDATORY_NEWLINE",n[n.INDENT=5]="INDENT",n[n.SINGLE_INDENT=6]="SINGLE_INDENT";class eA{items=[];constructor(e){this.indentation=e}add(...e){for(let E of e)switch(E){case r.SPACE:this.items.push(r.SPACE);break;case r.NO_SPACE:this.trimHorizontalWhitespace();break;case r.NO_NEWLINE:this.trimWhitespace();break;case r.NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(r.NEWLINE);break;case r.MANDATORY_NEWLINE:this.trimHorizontalWhitespace(),this.addNewline(r.MANDATORY_NEWLINE);break;case r.INDENT:this.addIndentation();break;case r.SINGLE_INDENT:this.items.push(r.SINGLE_INDENT);break;default:this.items.push(E)}}trimHorizontalWhitespace(){for(;ea((0,o.Z$)(this.items));)this.items.pop()}trimWhitespace(){for(;eS((0,o.Z$)(this.items));)this.items.pop()}addNewline(e){if(this.items.length>0)switch((0,o.Z$)(this.items)){case r.NEWLINE:this.items.pop(),this.items.push(e);break;case r.MANDATORY_NEWLINE:break;default:this.items.push(e)}}addIndentation(){for(let e=0;e<this.indentation.getLevel();e++)this.items.push(r.SINGLE_INDENT)}toString(){return this.items.map(e=>this.itemToString(e)).join("")}getLayoutItems(){return this.items}itemToString(e){switch(e){case r.SPACE:return" ";case r.NEWLINE:case r.MANDATORY_NEWLINE:return"\n";case r.SINGLE_INDENT:return this.indentation.getSingleIndent();default:return e}}}let ea=e=>e===r.SPACE||e===r.SINGLE_INDENT,eS=e=>e===r.SPACE||e===r.SINGLE_INDENT||e===r.NEWLINE,eN="top-level";class eI{indentTypes=[];constructor(e){this.indent=e}getSingleIndent(){return this.indent}getLevel(){return this.indentTypes.length}increaseTopLevel(){this.indentTypes.push(eN)}increaseBlockLevel(){this.indentTypes.push("block-level")}decreaseTopLevel(){this.indentTypes.length>0&&(0,o.Z$)(this.indentTypes)===eN&&this.indentTypes.pop()}decreaseBlockLevel(){for(;this.indentTypes.length>0;){let e=this.indentTypes.pop();if(e!==eN)break}}}class e_ extends eA{length=0;trailingSpace=!1;constructor(e){super(new eI("")),this.expressionWidth=e}add(...e){if(e.forEach(e=>this.addToLength(e)),this.length>this.expressionWidth)throw new eO;super.add(...e)}addToLength(e){if("string"==typeof e)this.length+=e.length,this.trailingSpace=!1;else if(e===r.MANDATORY_NEWLINE||e===r.NEWLINE)throw new eO;else e===r.INDENT||e===r.SINGLE_INDENT||e===r.SPACE?this.trailingSpace||(this.length++,this.trailingSpace=!0):(e===r.NO_NEWLINE||e===r.NO_SPACE)&&this.trailingSpace&&(this.trailingSpace=!1,this.length--)}}class eO extends Error{}class el{inline=!1;nodes=[];index=-1;constructor({cfg:e,dialectCfg:E,params:t,layout:s,inline:r=!1}){this.cfg=e,this.dialectCfg=E,this.inline=r,this.params=t,this.layout=s}format(e){for(this.nodes=e,this.index=0;this.index<this.nodes.length;this.index++)this.formatNode(this.nodes[this.index]);return this.layout}formatNode(e){this.formatComments(e.leadingComments),this.formatNodeWithoutComments(e),this.formatComments(e.trailingComments)}formatNodeWithoutComments(e){switch(e.type){case s.function_call:return this.formatFunctionCall(e);case s.array_subscript:return this.formatArraySubscript(e);case s.property_access:return this.formatPropertyAccess(e);case s.parenthesis:return this.formatParenthesis(e);case s.between_predicate:return this.formatBetweenPredicate(e);case s.case_expression:return this.formatCaseExpression(e);case s.case_when:return this.formatCaseWhen(e);case s.case_else:return this.formatCaseElse(e);case s.clause:return this.formatClause(e);case s.set_operation:return this.formatSetOperation(e);case s.limit_clause:return this.formatLimitClause(e);case s.all_columns_asterisk:return this.formatAllColumnsAsterisk(e);case s.literal:return this.formatLiteral(e);case s.identifier:return this.formatIdentifier(e);case s.parameter:return this.formatParameter(e);case s.operator:return this.formatOperator(e);case s.comma:return this.formatComma(e);case s.line_comment:return this.formatLineComment(e);case s.block_comment:return this.formatBlockComment(e);case s.keyword:return this.formatKeywordNode(e)}}formatFunctionCall(e){this.withComments(e.nameKw,()=>{this.layout.add(this.showKw(e.nameKw))}),this.formatNode(e.parenthesis)}formatArraySubscript(e){this.withComments(e.array,()=>{this.layout.add(e.array.type===s.keyword?this.showKw(e.array):e.array.text)}),this.formatNode(e.parenthesis)}formatPropertyAccess(e){this.formatNode(e.object),this.layout.add(r.NO_SPACE,"."),this.formatNode(e.property)}formatParenthesis(e){let E=this.formatInlineExpression(e.children);E?(this.layout.add(e.openParen),this.layout.add(...E.getLayoutItems()),this.layout.add(r.NO_SPACE,e.closeParen,r.SPACE)):(this.layout.add(e.openParen,r.NEWLINE),k(this.cfg)?(this.layout.add(r.INDENT),this.layout=this.formatSubExpression(e.children)):(this.layout.indentation.increaseBlockLevel(),this.layout.add(r.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseBlockLevel()),this.layout.add(r.NEWLINE,r.INDENT,e.closeParen,r.SPACE))}formatBetweenPredicate(e){this.layout.add(this.showKw(e.betweenKw),r.SPACE),this.layout=this.formatSubExpression(e.expr1),this.layout.add(r.NO_SPACE,r.SPACE,this.showNonTabularKw(e.andKw),r.SPACE),this.layout=this.formatSubExpression(e.expr2),this.layout.add(r.SPACE)}formatCaseExpression(e){this.formatNode(e.caseKw),this.layout.indentation.increaseBlockLevel(),this.layout=this.formatSubExpression(e.expr),this.layout=this.formatSubExpression(e.clauses),this.layout.indentation.decreaseBlockLevel(),this.layout.add(r.NEWLINE,r.INDENT),this.formatNode(e.endKw)}formatCaseWhen(e){this.layout.add(r.NEWLINE,r.INDENT),this.formatNode(e.whenKw),this.layout=this.formatSubExpression(e.condition),this.formatNode(e.thenKw),this.layout=this.formatSubExpression(e.result)}formatCaseElse(e){this.layout.add(r.NEWLINE,r.INDENT),this.formatNode(e.elseKw),this.layout=this.formatSubExpression(e.result)}formatClause(e){this.isOnelineClause(e)?this.formatClauseInOnelineStyle(e):k(this.cfg)?this.formatClauseInTabularStyle(e):this.formatClauseInIndentedStyle(e)}isOnelineClause(e){return this.dialectCfg.onelineClauses[e.nameKw.text]}formatClauseInIndentedStyle(e){this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e.nameKw),r.NEWLINE),this.layout.indentation.increaseTopLevel(),this.layout.add(r.INDENT),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatClauseInOnelineStyle(e){this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e.nameKw),r.SPACE),this.layout=this.formatSubExpression(e.children)}formatClauseInTabularStyle(e){this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e.nameKw),r.SPACE),this.layout.indentation.increaseTopLevel(),this.layout=this.formatSubExpression(e.children),this.layout.indentation.decreaseTopLevel()}formatSetOperation(e){this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e.nameKw),r.NEWLINE),this.layout.add(r.INDENT),this.layout=this.formatSubExpression(e.children)}formatLimitClause(e){this.withComments(e.limitKw,()=>{this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e.limitKw))}),this.layout.indentation.increaseTopLevel(),k(this.cfg)?this.layout.add(r.SPACE):this.layout.add(r.NEWLINE,r.INDENT),e.offset&&(this.layout=this.formatSubExpression(e.offset),this.layout.add(r.NO_SPACE,",",r.SPACE)),this.layout=this.formatSubExpression(e.count),this.layout.indentation.decreaseTopLevel()}formatAllColumnsAsterisk(e){this.layout.add("*",r.SPACE)}formatLiteral(e){this.layout.add(e.text,r.SPACE)}formatIdentifier(e){this.layout.add(e.text,r.SPACE)}formatParameter(e){this.layout.add(this.params.get(e),r.SPACE)}formatOperator({text:e}){this.cfg.denseOperators||this.dialectCfg.alwaysDenseOperators.includes(e)?this.layout.add(r.NO_SPACE,e):":"===e?this.layout.add(r.NO_SPACE,e,r.SPACE):this.layout.add(e,r.SPACE)}formatComma(e){this.inline?this.layout.add(r.NO_SPACE,",",r.SPACE):this.layout.add(r.NO_SPACE,",",r.NEWLINE,r.INDENT)}withComments(e,E){this.formatComments(e.leadingComments),E(),this.formatComments(e.trailingComments)}formatComments(e){e&&e.forEach(e=>{e.type===s.line_comment?this.formatLineComment(e):this.formatBlockComment(e)})}formatLineComment(e){(0,o.or)(e.precedingWhitespace||"")?this.layout.add(r.NEWLINE,r.INDENT,e.text,r.MANDATORY_NEWLINE,r.INDENT):this.layout.getLayoutItems().length>0?this.layout.add(r.NO_NEWLINE,r.SPACE,e.text,r.MANDATORY_NEWLINE,r.INDENT):this.layout.add(e.text,r.MANDATORY_NEWLINE,r.INDENT)}formatBlockComment(e){this.isMultilineBlockComment(e)?(this.splitBlockComment(e.text).forEach(e=>{this.layout.add(r.NEWLINE,r.INDENT,e)}),this.layout.add(r.NEWLINE,r.INDENT)):this.layout.add(e.text,r.SPACE)}isMultilineBlockComment(e){return(0,o.or)(e.text)||(0,o.or)(e.precedingWhitespace||"")}splitBlockComment(e){return e.split(/\n/).map(e=>/^\s*\*/.test(e)?" "+e.replace(/^\s*/,""):e.replace(/^\s*/,""))}formatSubExpression(e){return new el({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:this.layout,inline:this.inline}).format(e)}formatInlineExpression(e){let E=this.params.getPositionalParameterIndex();try{return new el({cfg:this.cfg,dialectCfg:this.dialectCfg,params:this.params,layout:new e_(this.cfg.expressionWidth),inline:!0}).format(e)}catch(e){if(e instanceof eO){this.params.setPositionalParameterIndex(E);return}throw e}}formatKeywordNode(e){switch(e.tokenType){case R.iv.RESERVED_JOIN:return this.formatJoin(e);case R.iv.AND:case R.iv.OR:case R.iv.XOR:return this.formatLogicalOperator(e);default:return this.formatKeyword(e)}}formatJoin(e){k(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e),r.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e),r.SPACE)}formatKeyword(e){this.layout.add(this.showKw(e),r.SPACE)}formatLogicalOperator(e){"before"===this.cfg.logicalOperatorNewline?k(this.cfg)?(this.layout.indentation.decreaseTopLevel(),this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e),r.SPACE),this.layout.indentation.increaseTopLevel()):this.layout.add(r.NEWLINE,r.INDENT,this.showKw(e),r.SPACE):this.layout.add(this.showKw(e),r.NEWLINE,r.INDENT)}showKw(e){var E;return(E=e.tokenType,(0,R.Ij)(E)||E===R.iv.RESERVED_CLAUSE||E===R.iv.RESERVED_SELECT||E===R.iv.RESERVED_SET_OPERATION||E===R.iv.RESERVED_JOIN||E===R.iv.LIMIT)?function(e,E){if("standard"===E)return e;let t=[];return e.length>=10&&e.includes(" ")&&([e,...t]=e.split(" ")),(e="tabularLeft"===E?e.padEnd(9," "):e.padStart(9," "))+["",...t].join(" ")}(this.showNonTabularKw(e),this.cfg.indentStyle):this.showNonTabularKw(e)}showNonTabularKw(e){switch(this.cfg.keywordCase){case"preserve":return(0,o.iw)(e.raw);case"upper":return e.text;case"lower":return e.text.toLowerCase()}}}class eL{constructor(e,E){this.dialect=e,this.cfg=E,this.params=new V(this.cfg.params)}format(e){let E=this.parse(e),t=this.formatAst(E),s=this.postFormat(t);return s.trimEnd()}parse(e){return(function(e){let E={},t=new z(t=>[...e.tokenize(t,E).map(X).map(w).map(v).map(K),(0,R.JU)(t.length)]),s=new eR(eo.fromCompiled(en),{lexer:t});return{parse:(e,t)=>{E=t;let{results:r}=s.feed(e);if(1===r.length)return r[0];if(0===r.length)throw Error("Parse error: Invalid SQL");throw Error(`Parse error: Ambiguous grammar
${JSON.stringify(r,void 0,2)}`)}}})(this.dialect.tokenizer).parse(e,this.cfg.paramTypes||{})}formatAst(e){return e.map(e=>this.formatStatement(e)).join("\n".repeat(this.cfg.linesBetweenQueries+1))}formatStatement(e){let E=new el({cfg:this.cfg,dialectCfg:this.dialect.formatOptions,params:this.params,layout:new eA(new eI(g(this.cfg)))}).format(e.children);return e.hasSemicolon&&(this.cfg.newlineBeforeSemicolon?E.add(r.NEWLINE,";"):E.add(r.NO_NEWLINE,";")),E.toString()}postFormat(e){if(this.cfg.tabulateAlias&&(e=function(e){let E=e.split("\n"),t=[];for(let e=0;e<E.length;e++){if(E[e].match(/^\s*SELECT/i)){let s=[];if(E[e].match(/.*,$/))s=[E[e]];else{if(t.push(E[e]),E[e].match(/^\s*SELECT\s+.+(?!,$)/i))continue;s.push(E[++e])}for(;E[e++].match(/.*,$/);)s.push(E[e]);let r=s.map(e=>({line:e,matches:e.match(/(^.*?\S) (AS )?(\S+,?$)/i)})).map(({line:e,matches:E})=>E?{precedingText:E[1],as:E[2],alias:E[3]}:{precedingText:e}),T=(0,o.BS)(r.map(({precedingText:e})=>e.replace(/\s*,\s*$/,"")));t=[...t,...s=r.map(({precedingText:e,as:E,alias:t})=>e+(t?" ".repeat(T-e.length+1)+(E??"")+t:""))]}t.push(E[e])}return t.join("\n")}(e)),"before"===this.cfg.commaPosition||"tabular"===this.cfg.commaPosition){var E,t,s;E=e,t=this.cfg.commaPosition,s=g(this.cfg),e=(function(e){let E=[];for(let t=0;t<e.length;t++){let s=[e[t]];for(;e[t].match(/.*,(\s*(--.*)?$)/);)t++,s.push(e[t]);E.push(s)}return E})(E.split("\n")).flatMap(e=>{if(1===e.length)return e;if("tabular"===t)return function(e){let E=(0,o.BS)(e.map(e=>e.replace(/\s*--.*/,"")))-1;return e.map((t,s)=>s===e.length-1?t:function(e,E){let[,t,s]=e.match(/^(.*?),(\s*--.*)?$/)||[],r=" ".repeat(E-t.length);return`${t}${r},${s??""}`}(t,E))}(e);if("before"===t)return e.map(e=>e.replace(/,(\s*(--.*)?$)/,"$1")).map((e,E)=>{if(0===E)return e;let[t]=e.match(ei)||[""];return t.replace(RegExp(s+"$"),"")+s.replace(/ {2}$/,", ")+e.trimStart()});throw Error(`Unexpected commaPosition: ${t}`)}).join("\n")}return e}}class eC extends Error{}let ec={tabWidth:2,useTabs:!1,keywordCase:"preserve",indentStyle:"standard",logicalOperatorNewline:"before",tabulateAlias:!1,commaPosition:"after",expressionWidth:50,linesBetweenQueries:1,denseOperators:!1,newlineBeforeSemicolon:!1},eu=(e,{dialect:E,...t})=>{if("string"!=typeof e)throw Error("Invalid query argument. Expected string, instead got "+typeof e);let s=function(e){if("multilineLists"in e)throw new eC("multilineLists config is no more supported.");if("newlineBeforeOpenParen"in e)throw new eC("newlineBeforeOpenParen config is no more supported.");if("newlineBeforeCloseParen"in e)throw new eC("newlineBeforeCloseParen config is no more supported.");if("aliasAs"in e)throw new eC("aliasAs config is no more supported.");if(e.expressionWidth<=0)throw new eC(`expressionWidth config must be positive number. Received ${e.expressionWidth} instead.`);if("before"===e.commaPosition&&e.useTabs)throw new eC("commaPosition: before does not work when tabs are used for indentation.");return e.params&&!function(e){let E=e instanceof Array?e:Object.values(e);return E.every(e=>"string"==typeof e)}(e.params)&&console.warn('WARNING: All "params" option values should be strings.'),e}({...ec,...t});return new eL(F(E),s).format(e)}},21629:function(e,E,t){"use strict";t.d(E,{B3:function(){return o},BS:function(){return n},FW:function(){return T},Z$:function(){return r},iw:function(){return R},or:function(){return i}});let s=e=>[...new Set(e)],r=e=>e[e.length-1],T=e=>e.sort((e,E)=>E.length-e.length||e.localeCompare(E)),n=e=>e.reduce((e,E)=>Math.max(e,E.length),0),R=e=>e.replace(/\s+/gu," "),o=e=>s(Object.values(e).flat()),i=e=>/\n/.test(e)}}]);
//# sourceMappingURL=4064-10e408686be28288.js.map